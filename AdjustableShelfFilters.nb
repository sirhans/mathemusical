(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    267429,       5295]
NotebookOptionsPosition[    265514,       5228]
NotebookOutlinePosition[    265924,       5246]
CellTagsIndexPosition[    265881,       5243]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Adjustable slope shelving filters", "Section",
 CellChangeTimes->{{3.780707887129492*^9, 3.780707895393735*^9}}],

Cell["\<\
Below is the code for second order, first order, and adjustable second order \
high shelf filters, copied from BMMultilevelBiquad.c\
\>", "Text",
 CellChangeTimes->{{3.780707919723963*^9, 3.780707951094159*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"void", " ", "BMMultiLevelBiquad_setHighShelfFirstOrder", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BMMultiLevelBiquad", "*", " ", "This"}], ",", " ", 
     RowBox[{"float", " ", "fc"}], ",", " ", 
     RowBox[{"float", " ", "gain_db"}], ",", " ", 
     RowBox[{"size_t", " ", "level"}]}], ")"}], 
   RowBox[{"{", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"assert", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"level", " ", "<", " ", "This"}], "->", "numLevels"}], 
         ")"}]}], ";"}], "\n", "    ", "\n", "    ", "//", " ", 
      RowBox[{
      "for", " ", "left", " ", "and", " ", "right", " ", "channels"}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{"set", " ", "coefficients", "\n", "    ", "for", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"size_t", " ", "i"}], "=", "0"}], ";", " ", 
         RowBox[{
          RowBox[{"i", " ", "<", " ", "This"}], "->", "numChannels"}], ";", 
         " ", 
         RowBox[{"i", "++"}]}], ")"}], 
       RowBox[{"{", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"double", "*", " ", "b0"}], " ", "=", " ", 
           RowBox[{"This", "->", 
            RowBox[{
             RowBox[{"coefficients_d", " ", "+", " ", 
              RowBox[{"level", "*", "This"}]}], "->", 
             RowBox[{
              RowBox[{"numChannels", "*", "5"}], " ", "+", " ", 
              RowBox[{"i", "*", "5"}]}]}]}]}], ";", "\n", "        ", 
          RowBox[{
           RowBox[{"double", "*", " ", "b1"}], " ", "=", " ", 
           RowBox[{"b0", " ", "+", " ", "1"}]}], ";", "\n", "        ", 
          RowBox[{
           RowBox[{"double", "*", " ", "b2"}], " ", "=", " ", 
           RowBox[{"b0", " ", "+", " ", "2"}]}], ";", "\n", "        ", 
          RowBox[{
           RowBox[{"double", "*", " ", "a1"}], " ", "=", " ", 
           RowBox[{"b0", " ", "+", " ", "3"}]}], ";", "\n", "        ", 
          RowBox[{
           RowBox[{"double", "*", " ", "a2"}], " ", "=", " ", 
           RowBox[{"b0", " ", "+", " ", "4"}]}], ";", "\n", "        ", "\n", 
          "        ", 
          RowBox[{
           RowBox[{"float", " ", "gainV"}], " ", "=", " ", 
           RowBox[{"BM_DB", "_TO", "_GAIN", 
            RowBox[{"(", "gain_db", ")"}]}]}], ";"}], "\n", "        ", "\n", 
         "        ", "//", " ", 
         RowBox[{
         "if", " ", "the", " ", "gain", " ", "is", " ", "nontrivial", "\n", 
          "        ", 
          RowBox[{"{", "\n", "            ", 
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{"double", " ", "gamma"}], " ", "=", " ", 
                RowBox[{"tanf", 
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"M_PI", " ", "*", " ", 
                    RowBox[{"fc", " ", "/", " ", "This"}]}], "->", 
                   "sampleRate"}], ")"}]}]}], ";", "\n", "            ", 
               RowBox[{"double", " ", "one_over", "_denominator"}], ";", "\n",
                "            ", 
               RowBox[{
                RowBox[{"if", 
                 RowBox[{"(", 
                  RowBox[{"gainV", ">", 
                   RowBox[{"1.0", "f"}]}], ")"}], 
                 RowBox[{"{", "\n", "                ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"one_over", "_denominator"}], " ", "=", " ", 
                    RowBox[{"1.0", 
                    RowBox[{"f", " ", "/", " ", 
                    RowBox[{"(", 
                    RowBox[{"gamma", " ", "+", " ", 
                    RowBox[{"1.0", "f"}]}], ")"}]}]}]}], ";"}], "\n", 
                    "                ", "*", "b0"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"gamma", " ", "+", " ", "gainV"}], ")"}], " ", 
                    "*", " ", "one_over", "_denominator"}]}], ";"}], "\n", 
                    "                ", "*", "b1"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"gamma", " ", "-", " ", "gainV"}], ")"}], " ", 
                    "*", " ", "one_over", "_denominator"}]}], ";"}], "\n", 
                    "                ", "*", "a1"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"gamma", " ", "-", " ", 
                    RowBox[{"1.0", "f"}]}], ")"}], " ", "*", " ", "one_over", 
                    "_denominator"}]}], ";"}], "\n", "            ", "}"}], 
                 "else", 
                 RowBox[{"{", "\n", "                ", 
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"one_over", "_denominator"}], " ", "=", " ", 
                    RowBox[{"1.0", 
                    RowBox[{"f", " ", "/", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gamma", "*", "gainV"}], " ", "+", " ", 
                    RowBox[{"1.0", "f"}]}], ")"}]}]}]}], ";"}], "\n", 
                    "                ", "*", "b0"}], " ", "=", " ", 
                    RowBox[{"gainV", "*", 
                    RowBox[{"(", 
                    RowBox[{"gamma", " ", "+", " ", 
                    RowBox[{"1.0", "f"}]}], ")"}], " ", "*", " ", "one_over", 
                    "_denominator"}]}], ";"}], "\n", "                ", "*", 
                    "b1"}], " ", "=", " ", 
                    RowBox[{"gainV", "*", 
                    RowBox[{"(", 
                    RowBox[{"gamma", " ", "-", " ", 
                    RowBox[{"1.0", "f"}]}], ")"}], " ", "*", " ", "one_over", 
                    "_denominator"}]}], ";"}], "\n", "                ", "*", 
                    "a1"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gainV", "*", "gamma"}], " ", "-", " ", 
                    RowBox[{"1.0", "f"}]}], ")"}], " ", "*", " ", "one_over", 
                    "_denominator"}]}], ";"}], "\n", "            ", "}"}], 
                 "\n", "            ", "\n", "            ", "*", "b2"}], " ",
                 "=", " ", 
                RowBox[{"0.0", "f"}]}], ";"}], "\n", "            ", "*", 
              "a2"}], " ", "=", " ", 
             RowBox[{"0.0", "f"}]}], ";"}], "\n", "        ", "}"}]}]}], "\n",
         "    ", "}"}], "\n", "    ", "\n", "    ", 
       "BMMultiLevelBiquad_queueUpdate", 
       RowBox[{"(", "This", ")"}]}], ";"}]}], "\n", "}"}]}], "\n"}], "\n", 
 RowBox[{"//", " ", 
  RowBox[{
  "based", " ", "on", " ", "formula", " ", "in", " ", "2.3", ".10", " ", "of",
    " ", "Digital", " ", "Filters", " ", "for", " ", "Everyone", " ", "by", 
   " ", "Rusty", " ", "Allred"}]}], "\n", 
 RowBox[{
  RowBox[{"void", " ", "BMMultiLevelBiquad_setHighShelf", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"BMMultiLevelBiquad", "*", " ", "This"}], ",", " ", 
     RowBox[{"float", " ", "fc"}], ",", " ", 
     RowBox[{"float", " ", "gain_db"}], ",", " ", 
     RowBox[{"size_t", " ", "level"}]}], ")"}], 
   RowBox[{"{", "\n", "    ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"assert", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"level", " ", "<", " ", "This"}], "->", "numLevels"}], 
         ")"}]}], ";"}], "\n", "    ", "\n", "    ", "\n", "    ", "//", " ", 
      
      RowBox[{
      "for", " ", "left", " ", "and", " ", "right", " ", "channels"}]}], ",", 
     " ", 
     RowBox[{
      RowBox[{"set", " ", "coefficients", "\n", "    ", "for", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"size_t", " ", "i"}], "=", "0"}], ";", " ", 
         RowBox[{
          RowBox[{"i", " ", "<", " ", "This"}], "->", "numChannels"}], ";", 
         " ", 
         RowBox[{"i", "++"}]}], ")"}], 
       RowBox[{"{", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"double", "*", " ", "b0"}], " ", "=", " ", 
                    RowBox[{"This", "->", 
                    RowBox[{
                    RowBox[{"coefficients_d", " ", "+", " ", 
                    RowBox[{"level", "*", "This"}]}], "->", 
                    RowBox[{
                    RowBox[{"numChannels", "*", "5"}], " ", "+", " ", 
                    RowBox[{"i", "*", "5"}]}]}]}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", "*", " ", "b1"}], " ", "=", " ", 
                    RowBox[{"b0", " ", "+", " ", "1"}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", "*", " ", "b2"}], " ", "=", " ", 
                    RowBox[{"b0", " ", "+", " ", "2"}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", "*", " ", "a1"}], " ", "=", " ", 
                    RowBox[{"b0", " ", "+", " ", "3"}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", "*", " ", "a2"}], " ", "=", " ", 
                    RowBox[{"b0", " ", "+", " ", "4"}]}], ";", "\n", 
                    "        ", "\n", "        ", 
                    RowBox[{
                    RowBox[{"float", " ", "gainV"}], " ", "=", " ", 
                    RowBox[{"BM_DB", "_TO", "_GAIN", 
                    RowBox[{"(", "gain_db", ")"}]}]}], ";", "\n", "        ", 
                    "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "gamma"}], " ", "=", " ", 
                    RowBox[{"tanf", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"M_PI", " ", "*", " ", 
                    RowBox[{"fc", " ", "/", " ", "This"}]}], "->", 
                    "sampleRate"}], ")"}]}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "gamma_", "2"}], " ", "=", " ", 
                    RowBox[{"gamma", "*", "gamma"}]}], ";", "\n", "        ", 
                    
                    RowBox[{
                    RowBox[{"double", " ", "sqrt_gain"}], " ", "=", " ", 
                    RowBox[{"sqrtf", 
                    RowBox[{"(", "gainV", ")"}]}]}], ";", "\n", "        ", 
                    RowBox[{"double", " ", "g_d"}], ";"}], "\n", "        ", 
                    "\n", "        ", "//", " ", 
                    RowBox[{
                    "conditionally", " ", "set", " ", "G", "\n", "        ", 
                    "double", " ", "G"}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"if", " ", 
                    RowBox[{"(", 
                    RowBox[{"gainV", " ", ">", " ", "2.0"}], ")"}], 
                    RowBox[{"{", "\n", "            ", 
                    RowBox[{
                    RowBox[{"G", " ", "=", " ", 
                    RowBox[{
                    "gainV", " ", "*", " ", "M_SQRT2", " ", "*", " ", 
                    "0.5"}]}], ";", "\n", "            ", 
                    RowBox[{
                    RowBox[{"double", " ", "G_", "2"}], " ", "=", " ", 
                    RowBox[{"G", "*", "G"}]}], ";", "\n", "            ", 
                    RowBox[{"g_d", " ", "=", " ", 
                    RowBox[{"pow", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"G_", "2"}], " ", "-", " ", "1.0"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gainV", "*", "gainV"}], " ", "-", " ", 
                    RowBox[{"G_", "2"}]}], ")"}]}], ",", " ", "0.25"}], 
                    ")"}]}]}], ";"}], "\n", "        ", "}"}], "\n", 
                    "        ", "else", " ", 
                    RowBox[{"{", "\n", "            ", 
                    RowBox[{"if", " ", 
                    RowBox[{"(", 
                    RowBox[{"gainV", " ", ">=", " ", "0.5"}], ")"}], " ", 
                    RowBox[{"{", "\n", "                ", 
                    RowBox[{
                    RowBox[{"G", " ", "=", " ", "sqrt_gain"}], ";", "\n", 
                    "                ", 
                    RowBox[{"g_d", " ", "=", " ", 
                    RowBox[{"pow", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1", "/", "gainV"}], ",", "0.25"}], ")"}]}]}], 
                    ";"}], "\n", "            ", "}"}], "\n", "            ", 
                    "else", 
                    RowBox[{"{", "\n", "                ", 
                    RowBox[{
                    RowBox[{"G", " ", "=", " ", 
                    RowBox[{"gainV", " ", "*", " ", "M_SQRT2"}]}], ";", "\n", 
                    "                ", 
                    RowBox[{
                    RowBox[{"double", " ", "G_", "2"}], " ", "=", " ", 
                    RowBox[{"G", "*", "G"}]}], ";", "\n", "                ", 
                    
                    RowBox[{"g_d", " ", "=", " ", 
                    RowBox[{"pow", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"G_", "2"}], " ", "-", " ", "1.0"}], ")"}], "/", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gainV", "*", "gainV"}], " ", "-", " ", 
                    RowBox[{"G_", "2"}]}], ")"}]}], ",", " ", "0.25"}], 
                    ")"}]}]}], ";"}], "\n", "            ", "}"}]}], "\n", 
                    "        ", "}"}]}], "\n", "        ", "\n", "        ", "//",
                     " ", 
                    RowBox[{
                    "compute", " ", "reuseable", " ", "variables", "\n", 
                    "        ", "double", " ", "g_d", "_", "2"}]}], " ", "=", 
                    " ", 
                    RowBox[{"g_d", "*", "g_d"}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "g_n"}], " ", "=", " ", 
                    RowBox[{"g_d", " ", "*", " ", "sqrt_gain"}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "g_n", "_", "2"}], " ", "=", " ", 
                    RowBox[{"g_n", " ", "*", " ", "g_n"}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{
                    "double", " ", "sqrt_", "2", "_g", "_d", "_gamma"}], " ", 
                    "=", " ", 
                    RowBox[{
                    "M_SQRT2", " ", "*", " ", "g_d", " ", "*", " ", 
                    "gamma"}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{
                    "double", " ", "sqrt_", "2", "_g", "_n", "_gamma"}], " ", 
                    "=", " ", 
                    RowBox[{
                    "M_SQRT2", " ", "*", " ", "g_n", " ", "*", " ", 
                    "gamma"}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{
                    "double", " ", "gamma_", "2", "_plus", "_g", "_d", "_", 
                    "2"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"gamma_", "2"}], " ", "+", " ", 
                    RowBox[{"g_d", "_", "2"}]}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{
                    "double", " ", "gamma_", "2", "_plus", "_g", "_n", "_", 
                    "2"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"gamma_", "2"}], " ", "+", " ", 
                    RowBox[{"g_n", "_", "2"}]}]}], ";", "\n", "        ", 
                    "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "one_over", "_denominator"}], " ", 
                    "=", " ", 
                    RowBox[{"1.0", 
                    RowBox[{"f", " ", "/", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gamma_", "2", "_plus", "_g", "_d", "_", "2"}], 
                    " ", "+", " ", 
                    RowBox[{"sqrt_", "2", "_g", "_d", "_gamma"}]}], 
                    ")"}]}]}]}], ";"}], "\n", "        ", "\n", "        ", 
                    "*", "b0"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gamma_", "2", "_plus", "_g", "_n", "_", "2"}], 
                    " ", "+", " ", 
                    RowBox[{"sqrt_", "2", "_g", "_n", "_gamma"}]}], ")"}], 
                    " ", "*", " ", "one_over", "_denominator"}]}], ";"}], 
                    "\n", "        ", "*", "b1"}], " ", "=", " ", 
                   RowBox[{"2.0", "f", " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"gamma_", "2"}], " ", "-", " ", 
                    RowBox[{"g_n", "_", "2"}]}], ")"}], " ", "*", " ", 
                    "one_over", "_denominator"}]}], ";"}], "\n", "        ", 
                 "*", "b2"}], " ", "=", " ", 
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{
                   RowBox[{"gamma_", "2", "_plus", "_g", "_n", "_", "2"}], 
                   " ", "-", " ", 
                   RowBox[{"sqrt_", "2", "_g", "_n", "_gamma"}]}], ")"}], " ",
                  "*", " ", "one_over", "_denominator"}]}], ";"}], "\n", 
              "        ", "\n", "        ", "*", "a1"}], " ", "=", " ", 
             RowBox[{"2.0", "f", " ", "*", " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{"gamma_", "2"}], " ", "-", " ", 
                RowBox[{"g_d", "_", "2"}]}], ")"}], " ", "*", " ", "one_over",
               "_denominator"}]}], ";"}], "\n", "        ", "*", "a2"}], " ", 
          "=", " ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"gamma_", "2", "_plus", "_g", "_d", "_", "2"}], " ", "-",
              " ", 
             RowBox[{"sqrt_", "2", "_g", "_d", "_gamma"}]}], ")"}], "*", 
           "one_over", "_denominator"}]}], ";"}], "\n", "    ", "}"}], "\n", 
       "    ", "\n", "    ", "BMMultiLevelBiquad_queueUpdate", 
       RowBox[{"(", "This", ")"}]}], ";"}]}], "\n", "}"}]}], "\n", "\n", "\n",
   "\n"}], "\n", 
 RowBox[{"void", " ", "BMMultiLevelBiquad_setHighShelfAdjustableSlope", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"BMMultiLevelBiquad", "*", " ", "This"}], ",", " ", 
    RowBox[{"float", " ", "fc"}], ",", " ", 
    RowBox[{"float", " ", "gain_db"}], ",", " ", 
    RowBox[{"float", " ", "slope"}], ",", " ", 
    RowBox[{"size_t", " ", "level"}]}], ")"}], 
  RowBox[{"{", "\n", "    ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"assert", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"level", " ", "<", " ", "This"}], "->", "numLevels"}], 
        ")"}]}], ";"}], "\n", "    ", "\n", "    ", "//", " ", 
     RowBox[{
     "for", " ", "left", " ", "and", " ", "right", " ", "channels"}]}], ",", 
    " ", 
    RowBox[{
     RowBox[{
      RowBox[{"set", " ", "coefficients"}], "\n", "    ", "//", " ", 
      RowBox[{
      "these", " ", "formulae", " ", "are", " ", "from", " ", "the", " ", 
       "RBJ", " ", "filter", " ", "cookbook", "\n", "    ", "for", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          RowBox[{"size_t", " ", "i"}], "=", "0"}], ";", " ", 
         RowBox[{
          RowBox[{"i", " ", "<", " ", "This"}], "->", "numChannels"}], ";", 
         " ", 
         RowBox[{"i", "++"}]}], ")"}], 
       RowBox[{"{", "\n", "        ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{
            RowBox[{
             RowBox[{
              RowBox[{
               RowBox[{
                RowBox[{
                 RowBox[{
                  RowBox[{
                   RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"double", "*", " ", "b0"}], " ", "=", " ", 
                    RowBox[{"This", "->", 
                    RowBox[{
                    RowBox[{"coefficients_d", " ", "+", " ", 
                    RowBox[{"level", "*", "This"}]}], "->", 
                    RowBox[{
                    RowBox[{"numChannels", "*", "5"}], " ", "+", " ", 
                    RowBox[{"i", "*", "5"}]}]}]}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", "*", " ", "b1"}], " ", "=", " ", 
                    RowBox[{"b0", " ", "+", " ", "1"}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", "*", " ", "b2"}], " ", "=", " ", 
                    RowBox[{"b0", " ", "+", " ", "2"}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", "*", " ", "a1"}], " ", "=", " ", 
                    RowBox[{"b0", " ", "+", " ", "3"}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", "*", " ", "a2"}], " ", "=", " ", 
                    RowBox[{"b0", " ", "+", " ", "4"}]}], ";", "\n", 
                    "        ", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "A"}], " ", "=", " ", 
                    RowBox[{"pow", 
                    RowBox[{"(", 
                    RowBox[{"10.0", ",", 
                    RowBox[{"gain_db", "/", "40.0"}]}], ")"}]}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "w0"}], " ", "=", " ", 
                    RowBox[{"2.0", " ", "*", " ", "M_PI", " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"fc", " ", "/", " ", "This"}], "->", 
                    "sampleRate"}], ")"}]}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "alpha"}], " ", "=", " ", 
                    RowBox[{"sin", 
                    RowBox[{
                    RowBox[{"(", "w0", ")"}], "/", "2.0"}], " ", "*", " ", 
                    "sqrt", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", " ", "+", " ", 
                    RowBox[{"1.0", "/", "A"}]}], ")"}], " ", "*", " ", 
                    RowBox[{"(", 
                    RowBox[{
                    RowBox[{"1.0", "/", "slope"}], " ", "-", " ", "1"}], 
                    ")"}]}], " ", "+", " ", "2"}], ")"}]}]}], ";", "\n", 
                    "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "twoRAalpha"}], " ", "=", " ", 
                    RowBox[{"1.0", " ", "*", " ", "sqrt", 
                    RowBox[{"(", "A", ")"}], " ", "*", " ", "alpha"}]}], 
                    ";"}], "\n", "        ", "\n", "        ", "//", " ", 
                    RowBox[{
                    "compute", " ", "the", " ", "prenormalized", " ", 
                    "filter", " ", "coefficients"}]}], "\n", "        ", "//",
                     " ", 
                    RowBox[{
                    "these", " ", "formulae", " ", "are", " ", "from", " ", 
                    "the", " ", "RBJ", " ", "filter", " ", "cookbook", "\n", 
                    "        ", "double", " ", "b0pn"}]}], " ", "=", "      ", 
                    RowBox[{"A", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "+", "1.0"}], ")"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1.0"}], ")"}], "*", "cos", 
                    RowBox[{"(", "w0", ")"}]}], " ", "+", " ", "twoRAalpha"}],
                     " ", ")"}]}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "b1pn"}], " ", "=", " ", 
                    RowBox[{
                    RowBox[{"-", "2.0"}], "*", "A", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1.0"}], ")"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "+", "1.0"}], ")"}], "*", "cos", 
                    RowBox[{"(", "w0", ")"}]}]}], "            ", ")"}]}]}], 
                    ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "b2pn"}], " ", "=", "      ", 
                    RowBox[{"A", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "+", "1.0"}], ")"}], " ", "+", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1.0"}], ")"}], "*", "cos", 
                    RowBox[{"(", "w0", ")"}]}], " ", "-", " ", "twoRAalpha"}],
                     " ", ")"}]}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "a0pn"}], " ", "=", "          ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "+", "1.0"}], ")"}], " ", "-", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1.0"}], ")"}], "*", "cos", 
                    RowBox[{"(", "w0", ")"}]}], " ", "+", " ", 
                    "twoRAalpha"}]}], ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "a1pn"}], " ", "=", "    ", 
                    RowBox[{"2.0", "*", 
                    RowBox[{"(", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1.0"}], ")"}], " ", "-", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "+", "1.0"}], ")"}], "*", "cos", 
                    RowBox[{"(", "w0", ")"}]}]}], "            ", ")"}]}]}], 
                    ";", "\n", "        ", 
                    RowBox[{
                    RowBox[{"double", " ", "a2pn"}], " ", "=", "          ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "+", "1.0"}], ")"}], " ", "-", " ", 
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"A", "-", "1.0"}], ")"}], "*", "cos", 
                    RowBox[{"(", "w0", ")"}]}], " ", "-", " ", 
                    "twoRAalpha"}]}], ";"}], "\n", "        ", "\n", 
                    "        ", "//", " ", 
                    RowBox[{
                    "normalize", " ", "the", " ", "a0", " ", "term", " ", 
                    "to", " ", "1", " ", "and", " ", "save", " ", "the", " ", 
                    "coefficients", "\n", "        ", "*", "b0"}]}], " ", "=",
                     " ", 
                    RowBox[{"b0pn", " ", "/", " ", "a0pn"}]}], ";"}], "\n", 
                    "        ", "*", "b1"}], " ", "=", " ", 
                   RowBox[{"b1pn", " ", "/", " ", "a0pn"}]}], ";"}], "\n", 
                 "        ", "*", "b2"}], " ", "=", " ", 
                RowBox[{"b2pn", " ", "/", " ", "a0pn"}]}], ";"}], "\n", 
              "        ", "*", "a1"}], " ", "=", " ", 
             RowBox[{"a1pn", " ", "/", " ", "a0pn"}]}], ";"}], "\n", 
           "        ", "*", "a2"}], " ", "=", " ", 
          RowBox[{"a2pn", " ", "/", " ", "a0pn"}]}], ";"}], "\n", "    ", 
        "}"}], "\n", "    ", "\n", "    ", "BMMultiLevelBiquad_queueUpdate", 
       RowBox[{"(", "This", ")"}]}]}], ";"}]}], "\n", "}"}]}]}], "Code",
 CellChangeTimes->{{3.780707905361236*^9, 3.780707914414164*^9}, {
  3.780713353957292*^9, 3.780713361811092*^9}, {3.780715351407482*^9, 
  3.780715361303033*^9}},
 EmphasizeSyntaxErrors->True],

Cell[TextData[{
 "Based on the code above, we port the variable slope filter to ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 ":"
}], "Text",
 CellChangeTimes->{{3.780715397692561*^9, 3.7807154124465303`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zz", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{"\[ExponentialE]", "^", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gainToDb", "[", "g_", "]"}], ":=", 
   RowBox[{"20", 
    RowBox[{"Log10", "[", "g", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"variableSlopeHighShelf", "[", 
    RowBox[{"z_", ",", "\[Omega]c_", ",", "g_", ",", "s_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a0", ",", " ", "a1", ",", " ", "a2", ",", " ", "b0", ",", " ", "b1", 
       ",", " ", "b2", ",", "A", ",", " ", "\[Alpha]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A", " ", "=", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"gainToDb", "[", "g", "]"}], "/", "40"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", " ", "=", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Omega]c", "]"}], "/", "2"}], " ", "*", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", " ", "+", " ", 
             RowBox[{"1", "/", "A"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", "s"}], " ", "-", " ", "1"}], ")"}]}], " ", "+",
           " ", "2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"a0", " ", "=", "                  ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", "+", "1"}], ")"}], "-", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", "-", "1"}], ")"}], "*", 
         RowBox[{"Cos", "[", "\[Omega]c", "]"}]}], " ", "+", " ", 
        RowBox[{"2", "*", 
         RowBox[{"Sqrt", "[", "A", "]"}], "\[Alpha]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"b0", " ", "=", "        ", 
       RowBox[{"A", " ", "*", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "+", "1"}], ")"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "-", "1"}], ")"}], "*", 
           RowBox[{"Cos", "[", "\[Omega]c", "]"}]}], " ", "+", " ", 
          RowBox[{"2", "*", 
           RowBox[{"Sqrt", "[", "A", "]"}], " ", "\[Alpha]"}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"b1", " ", "=", "  ", 
       RowBox[{
        RowBox[{"-", "2"}], "A", " ", "*", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "-", "1"}], ")"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "+", "1"}], ")"}], "*", 
           RowBox[{"Cos", "[", "\[Omega]c", "]"}]}]}], 
         "                               ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"b2", " ", "=", "        ", 
       RowBox[{"A", " ", "*", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "+", "1"}], ")"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "-", "1"}], ")"}], "*", 
           RowBox[{"Cos", "[", "\[Omega]c", "]"}]}], " ", "-", " ", 
          RowBox[{"2", "*", 
           RowBox[{"Sqrt", "[", "A", "]"}], " ", "\[Alpha]"}]}], ")"}]}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"a1", " ", "=", "         ", 
       RowBox[{"2", "*", 
        RowBox[{"(", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "-", "1"}], ")"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "+", "1"}], ")"}], "*", 
           RowBox[{"Cos", "[", "\[Omega]c", "]"}]}]}], 
         "                                ", ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a2", " ", "=", "               ", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", "+", "1"}], ")"}], "-", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "-", "1"}], ")"}], "*", 
          RowBox[{"Cos", "[", "\[Omega]c", "]"}]}], " ", "-", " ", 
         RowBox[{"2", "*", 
          RowBox[{"Sqrt", "[", "A", "]"}], "\[Alpha]"}]}], " ", ")"}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", "normalize", " ", "*)"}], "\[IndentingNewLine]", 
      RowBox[{"b0", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"b1", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"b2", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a1", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", " ", "+", " ", 
         RowBox[{"b1", "/", "z"}], " ", "+", " ", 
         RowBox[{"b2", "/", 
          RowBox[{"z", "^", "2"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"a1", "/", "z"}], "+", 
         RowBox[{"a2", "/", 
          RowBox[{"z", "^", "2"}]}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"variableSlopeHighShelf", "[", 
     RowBox[{
      RowBox[{"zz", "[", "\[Omega]", "]"}], ",", "1", ",", "2", ",", "1"}], 
     "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780715414166746*^9, 3.7807155486771297`*^9}, {
   3.780715579642496*^9, 3.7807158601344633`*^9}, {3.78071591609094*^9, 
   3.7807159249456997`*^9}, {3.7807159835021887`*^9, 3.780716069833047*^9}, {
   3.780716267398106*^9, 3.780716274585244*^9}, {3.780716442510419*^9, 
   3.780716530323523*^9}, {3.780716637136631*^9, 3.780716730546495*^9}, {
   3.780718196122012*^9, 3.780718205816861*^9}, {3.780718235898273*^9, 
   3.780718289532329*^9}, {3.7807183459018297`*^9, 3.780718376164177*^9}, {
   3.780718464368986*^9, 3.780718524791918*^9}, {3.7807185793442593`*^9, 
   3.7807185800625257`*^9}, {3.780718626923358*^9, 3.7807186286420937`*^9}, {
   3.7807186693468857`*^9, 3.780718699361515*^9}, {3.780718740413671*^9, 
   3.7807187699708023`*^9}, {3.780718844572268*^9, 3.780718862188448*^9}, {
   3.780718900136838*^9, 3.780718900256707*^9}, {3.7807189304103193`*^9, 
   3.780718934930532*^9}, 3.780719005916358*^9, {3.780719420308577*^9, 
   3.7807196130923233`*^9}, {3.780720856553039*^9, 3.780720860212535*^9}, {
   3.780721840737165*^9, 3.7807218933419733`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1:eJwd1nc8ld8fAHDudUfRLkUSUklDQoT6HCqyClESJWkZZdcXURFpIDNlZ2ck
e4+QnZUiSvZIrr3v/Z3nd/+49/V+fc7zPOd8Pp9znitofE/7BomNjU0dfxG/
5OLVDb1SVieYLOIzDt0K1T1Zvvegc5GGowz4ZtOfFOPrAieSXf7v6H/aN2Ly
XUErS5qdsOEuiem5ZA84f9WdRDjv+Hs5wThPeKDmQCbMrbfJVTXiBdAeJXMQ
trF2rbEJfgUbt4pSCTe+nNoQ6usNF0eIBzIgsCXtQG+FD5zy27+acHn3ncb7
Za9hrVkVF+HJMUFbrmJfiHr+ax1hwaX2rZH5fpBb47iJsCbdN18qxx96Pqds
Jey8RfVqTUYAeDa48xFOEiKRr6YFAjt5sxDhDrG82KnkIPA4dkuEMP24teqz
xDegtdpXjLC0qug/vrhgCK+PlSZ882LP67T3b6HwXQ4i7G/yVkop4h2s1fip
SrjMSru9IyQEBB12XSDMcF798F5wKGQ6xhoT5n9ZJsARGAZVpg6WhDWCHcrf
+IbDe4EsF8InzvNkBCpHAOOolc//839phvKnIgKKaOVRhM2Nmi7uPxUJXslf
sgiTbyUn2JVFgjU5sI7wWwvPpWIUBatiVPoIH7G9obG6OApC/q2sEDZ6vGMi
LP89WKW04wIyYM5jQXH4WDRwR8rpEfby+uYvkRMNwZKbHAnvDkgbeHg0Bhw8
XSIIF7x7JVOVEQMqjyOqCJ+PuvN8o0QsZBcFThEeiT/daZAWCzExroIkbJ6s
FZeJ5DigVda4E/5Y0N4kdyAe5l+ZFRE+8zlzl3tiPLzg81kgbN9o8YU3LgGS
lhZwAzFgzXcVnhu7E+Hp4ItSwtFdu81S3yfCz0ZZLg7s5pGutaciPsCdva9T
CN+ZyDXy4k+CYHhBpWCzzQd8+hGSBPoflK8TFqOcvWARnAxmBzL3U7ErOUXj
s7emwDlWURDhKxupi+yBKbArUn4VDfvlzqLQQN9UWCuqsUJYqfadeMmaj/BJ
9PkLOnG9u95mKe2PsNd8k+Aq7C8rTe38Pz/CUhDt+mpifbleBX4702Dzm6l1
nNhVtmrhdJM0aOU4VPF/j5abTP5NA6XRdypriPFxj5VviX+CvL96PGuJuPEJ
0U67T5Bken+ScHV79ngF8xP89JorXY9d8yXRIXh9Boxkcv/ajK3qestwrW4G
RFqNsHET8RPCyDU4AxzfPxDbil2bGUqxEMqEx1spaTzY6lb6Q39uZsJT/ViO
7dh1B7bWXviQCXlbztzgI/zexwdJZsHO9F9ndxLjr2rYZD7IAjMBlx8CRJx3
9QXRwizw4rtvKUT4tev2zUrZYBfaWLcbu97FPnbwYg7YfONROIh9Vk7C0yAk
B4bOXVUWw26YHTdr6s6B64tdV8QJW9wRz7+TC8UCXJ+liPH79mw+nJILteOP
1ssQ8b6e2ejJXIgNyLWUJXzZoMDLMQ/cxrnMgBi/lSecXJIH+0JnKIpEvPnb
4wcc+XBvy4nMU9hfVc4pG7/Kh99KgdqqxPkjrdgsFV4A6WnS/heI82OKmZHY
WwByQqNdl4h4Sn7QTpFCmLptCobYTbulDFelFYKwdJCaCdF/m0SGOsuK4OIF
6wAbbO2vfTVatGJoOX868T4Rfx6ZXKlWDPsFAzscsVvYt9t8bC2GQWq4txux
X+aoLAWbErAs5LoUhM3apVEu7VcCH5Nb2UOwN2v6eR5MLwEPAXJlBDbE79zM
M1UCCvMKUYnE+aMns49hXQouoXJZxdgJbs7/+n1LQWt0t1IFdtHH8vSfn0rB
+9nwdA32MF3rxJfJUtATq/zYRpw3uXfOh1mXgbGsR8o4sZ/7U7f5+5bBE4Eh
hVns2xtmuzw/lcFzq9q5ZWy/O09u202WgQI3s241OwOGeN49VLf+DI9i3URF
sF871MUtWpVDUqqVgCl2bOxGC8brclh87cVtg13QrHdkIK0c2F2FpZ2wB0T7
C5omyqHP9PuCF7bsz5WmeKsKYLSr+2dhn6OdCgp7XQGiH3aOlWCbSDw38E+r
gK9Nuba12N4vuAddJipAotZx4x/sPjmx5QtWlWBKGQtaS2LAwi27UvXXlSDE
9sGeF3utf767YlolSBllPduDfeyv8oZDE5Vwe4muAtheIUZ7KFZfINZxm5oN
tszKa810yyrQ3f7uZz+2rJNpEN2nCi438Q1PY8stKf4yTK0ChcUT4hxknM+F
KTP6vyqY56q12YV9ckbXw9CsGj6zlptNsM+O8RTRbtZA02dNtylsTfNJDsOn
NSCv8OoplYOB61aj9im6BsQPX6/lwdYZdmw36K2BTc72exWw9fu7ptOMamH7
WKyEH/aNrsj9BpfrwD1A+chpCn4/GThYpznUga4qq84A+/ZP7Vzq2zrYtMyX
bYtt2k5WTvtRBzuf6TvFYFt+u2FMvVAPhlJFv1ZTGeBUvy/4o2YDtH3tie7H
dlYndVMsG0BGk+clicYAl9qOPZe9GyBU5GLDTuwn1S8yKA0N0HTt383L2B4V
Y1/11b6C6p7ulTbs6l96rqRdjRD2+qhlN50BF+pktrBLNsJbUdOr1FW4Xrnb
4linGmHP1/+qDmCzBfyoWb7ZCCJyGlyO2DJqehvnEhthN3f//R2rcT9lX4wc
PdIEgyJRtQ6cDJCMkZYYOYn9N7stHrvMd2vFkE4T1NFSzb9j/7L4PtRv3wQx
KYnHj3IxYIvwxcPdeU3wxm/BdxHbzedCcatiMww9KqaFr2XARuejWi3nm+GW
fYRyG3aEGXdvk0kzfDv5UnjtOty/Sm3Ur+7NsP/80TwX7Kll3bPVNc3wxYlh
Z7qeAcZ3dLsKtVsgJ8xD7upGBiBFnaVY41b41uIe2sDNgHluEWlX61YQunYq
iXsrA9JGl6yvPmkFP0XFm1exhQLej2yNagVuHoXuSWzy0GT7sz+toHpMabUQ
D37fvHqdY2r0DQwZnSJR23F9jG9MK1l+g8kSNosZbGnpY4d3PfoGZeZVFip8
DIjv7o77GY7Hn8pOmMJ+LnE4SP33N+gpuC2qxY//f7Q32B260gY11+XUxQUZ
QE2JSlt9tw1SBYr/+GAXPbEfG3jYBj1pXEoT2IcO8N8ID20DB4V4lwwhBqx3
sdBZ39UGrrwPv58SZkCrMJfE5OXv4LbwWcBrL+5XSxVG5qUfIPiG1772EAME
pnx4B0x/wAO7gCAtMQb02/04xe30Axb38bX/wLZ0vBVsH/YDau6Hlo0cZoC7
+1NF6d4f0Lix4TKfBAPSQ0r9c8zb4Qj3Ra4caQY82LmqeOhhO/w+6j2mKYP3
X5Tm8Dbvdng6aUYfxa6J+338v7R2eCbnOyEky4DuTysDx2bb4fozseJIeQZw
VR87lu/SAev9o7I6FfB5rfb4+qhPB5TePT/rqciAoIaqV9ujOiBe8a+nzElc
n9aLPY7leLy5Q3rwKdyfv+1eyK/6CTnR0SfMlfF+nEnrKvT9CZUVfh/Oa+D8
CYo+KYnphGcc7+Kk9RmwWC9rEZHVCQcrhaPWXmaAlIOa3qMvnWB1VWbbIHZS
s/khNNwJNbx3H4YYMuCda2pH8YEuWKo/fInnGl5vv6REcXoXHD8tVWxwmwES
CdBXWPoL1nGkv9rygAF3dTW/hjb/ggix9G07/2NAIvu1vIe9v0DYvURb1AHP
X/+Jz3HKb1Dtut1x2gnXj7NCvvDMb9glmGDy+hED/pmrBhR8/Y3nbV/t6InP
nzei77vudsN/R/i740MYQOtJsiiw74aXbV5R30Lx//39YjLvnLvBzbyAxhGO
61ssUa/n1Q3j6UrFNyIZMNYvP9eS3A03tYsox2NxPSXOqdX87YYcseNk+Y8M
yGmwmcoy/QMZNQ7ibhUMMNs2Wxhg/Qf04m7HDlbi/8vGD57ZOvwBmq5Zn3oV
3q8zTjuOPP8D03ehhK8Wn5d87srJCX+g928Hd3Mjfp/eefPu/dAfCAE+Wf9O
BmynFJ70udkDWePc/x7O4P7c/R+F514PbKrcmwtz+LxXkvoSeb8HdjnxV5IX
GEB6lqya/qwHbDdUJvou4/fb6jCttsQe6K6tKq0lT0DWeperfOM94KIqeDRp
4wR+voJj/P1e8BuIQIeOTMDq4yvy4o964bDhRh9ZyQkoN8xl5j7rBS3vh6dV
jk6ATLj4k9rgXgg4JTRgITsB/EJCnv/ye0EtWoanVXEC/u4lB0my9YHKA92N
W3QmwEOi4lPJsz5ok6Py3nswAW3Kjio5Pn1wWmpTZqTDBAgbiHenvukDJbNX
D9ucJqDMLXRNeHwfxHeVvVF6PAHMb3a3H1b1gSmvA0Xh+QTYP9jDL0vvhy9c
R3nDQybgZqGHZ7pHP+hNZ+eTPk/AaWVVo1j3AXCdb7hlwz0J5xgm3+28BsB8
1rFoN88kXAp2OXs6cACivipLd2yfBIvRDPm+mAGYcXDxUhGchADvnTxCFQOQ
S0usVzgwCf3fp5tCyYNQNvbq4hvFSXh6O/xkwKNBsHVIVvlpOQkVntN73ByG
QIbxOCekZRJGXm0u+P1mBAJVW5PTy6fg2v00b4bvXxA4ZXi6vnQaHgqVi7tk
/4P2K9VJQcMzcIj5cJZ0B9f5wPyEMfccfDHUmxIwmYCAR3/dqw7Og3iYxfeH
tpMg8IYWcUprAU5plepnWk/BhsCuHb1nF2F//7mK/e7T0L6zglKpvATW663k
w/xngOsNu/Y3/mW4ntKoPeozC52bI8fS6pbhyrYvT8QDZsEoKmza7Osy6D8p
/HQ/eBY4Yu7uEW5eBs0LiRs5ombhiKozl/f3ZZBnujbzpc/CA0dTxtmeZdh8
Vlr77LdZcPna/OL+3DKUj4VqpfHMgYv41L97Aiuw56CZ5v2oOXCarI7YabEC
f31+jdjGzoHHkK6w4r0V+DSt9dQ6cQ76lNTEr1utwPECmTyLT3NgMFU7HGG3
AjpqVGGTsjnYIpvev9p5BR7fiZzT7JkDTgbZO9hrBTpjvoeJCs0Da2/G35iU
FfDjPzXWFTkP67k4doaNrEBW3fD9LzHzcEWx8c+VvyvQ4eBNSkuYB1LTnev8
/1ZA4HvHVre0eZgbd4sJnliBJG8rRdHSeaDZ9xx9PL8ClWzhQfbd8/DbpoN3
C5UJiz0LCut2LgAbfVRLR4AJRnGpgShkAY6P+ayc12ICVWGSzyViAd5vLls3
rM2E5A7J94XRC6BBT/zupIOvX5OXKpu8AKl27S8iLjLB37a8SrII3+/0uZAf
hkyoUmhfFOleAFlt+kYuUyYc7iRd3SC8CEPe9WNPHzOBbcOFvT0fFiHkk2XV
RBITrKK3bPuRuggDijURwilM6JH+Rm9IXwTZp1ZPL6QyofyKzkhu/iKkG++y
z05jgmeSdvLr2kUYFL5GvZvFhI1nzkkojC7CmRCmWUoxE4RdzkCE6BKk5tt6
PWpigsqY7MUrCUtQFfr72YtJJpwwDzqZkLwE8vOu+99NMeHI6JTYdNoSMAUd
OxOmmcA7nER/nrcE512Pm5fPMuFvH39eZu0SlP5hXfi3yASfTtKONf+WwNMy
Z24LmQVttTU9+UeWYXSq/lTuRhaYJOrf5SlYhrt6B+rtxFiQZTOsqlmyDIKT
z+6rHmYB/fiDvR7ly6B3Axnzi7Mg6WtA9zTu484pnqXPR1gwPd2o3di1DEpx
HarUoyxwBWVpD9YydMg97rslz4KoVgm2GcUVWGnRXIk6w4I/TC7fxuoV6JNF
T7deZQGzdFt7Uf0KfHVx0s7E5n0qLJDctAL8nlpB2kYs0OGUT/FsX4Hbe256
vrjGgsqtZjWKwyvA3vaSd+46CxIPV5My6Uw4pOSnmnmbBbbGT22ClZlQ8/N0
VKMVC6iVKzrGFUxwEt9r8uYJC2JtY4Niqpmg7urUJOjKAqVd5zqG6pnwdCAv
LxHb/VHE1XttTBCczSDlu7GAInfS1GmQCY3RHbbf3FnA8fGZS+AqFrR2lShO
PmcB6e2mxBoNFqz73u/Q4MsClsU+1pE2Fgz/4KWJRLLAlPtc0sEOFvwt2P7y
JXZrke0lkV8saBgzymBgJ64rSd8xgNe5MjCeHYV/0y7cps+yQOP4ju2K0diL
pUP/VrOh+iv6rqfjWBB/fFyrXJQNdbxQD16dzALNchXhe6ZsSD10WiA0mwUZ
hTPWxuZs6E3ZXZ5R7G3ZkaW6d9mQ7dO71TI5LOhOWLgib82GWttHNVuwLb0T
glc54PsNn+Wg5LHAR3/VumhPNhTWkyZ2uYAFjYyqhR/xbGgfD0WktYQFkiO2
Z+oS2ZCLUMMjnlIWvOkVCCpOYkOrt0q8uYJt1PZAMvYjGzJKjCcPYTPyRe7Z
5LChQYpgy1wZC9Z7POtbU4Wvr8p+wlnBAq0dZ74qDrIhxS2z3hzVLLB/WfbO
aJgNAXpqoIwdsiR/23mUDYUqZvR6Yg+1i7PnjbOhrrK/QmtrWOAcuF1CfJ4N
Re4PNttUi/tz3XjgzlXsKM2m/PKGelx/UuCVZVF2JIDUDDobWXDAav1+3oPs
yKriwyR3Ewu0u5/PSYuxo0dWwmpa2KFFLj42EuzoRyA6WYEt6XinbESOHf1T
Ub2Q2MyCa9Pye9rV2dHuQXmZO60sKBjoHcu8y47kUrbeyv/Ogi/NIfdSLdnR
3nXXj49iNxfpTsRbsyMPk+he3h94/oFfpt/Zs6OImJSI/7A3K39YeuzMjl65
Gv+RbGeBeZz1qrNe7KibbTAiCvcN32323QPJ7Ciu8N8hgy4W7NXJi/2dyo7Y
o4a03LGPIBuR9jR8f9MalY/YZ7b176/LZEcjYz9zyLjPbKuqjnwqZEf3ZdTf
xGPXifgg53p29G1HitPIbxY4DvMbcI+xo8FDS9/P9eDr1WIvy47j9Z8OXLiP
vTn54OUrE+yIHN86Fo6dYimvHzvDjq7mDJ0dx+6eu6R3lMmOkjp3zb/oZcFp
aoDOhXUk1F7Ex1XYh/fFLk6NQHESOl9qZcDCfd7p5queJ0FC799W7xIaxP08
wKP+S4qEFMNHy05hKyaKqO2RJaF1E/s8PbFtxZVUshRJaFV7zbENQyxoh8en
286TkIXZag2eYRa8N5g7zm1PQulaimjNKN4vcoWTWx6Q0NJMqcY+bCqva9wW
BxJyr5WRP41t+n3thi3OJLQ8/bDACfuI9p6+Te4kFJPgrDGCXaas+3xDIAkF
2DdXF/9lQc+R9DauLBLaqrU4ovOPBf4b/nvBlUNCgf796hbYSowTiCuPhGgj
B/yeYicm1yRwFpGQZtnR+kxsa5Eep9WVJJR/jby4eZwF7PwbdtHbSIgtPky9
AVtg1b175FkSEh358OTgBI6vOcu3MEdC/JTCo4rYPesPVv9bwPk8LNZyAfv9
tlGhjhUS8rrtVeGCvUfkVttHChmJqL31bcQ+oHz1+JUtZKTeVdRtMckC6afn
OHMlyUgpw6E7aAqfB56HclKOkpH5897qBOz5l2tuRMuQ0elA1bB87Dz/2iJv
eTJ6HW9M/40tH61sffMUGXlk9PQKT+P6fIb2TTpkJP3vUHUS9ln2w3F3bcho
bFayOXkG73eHriYvOzLaeN3Cqwjbb/r5csp9MjoUliP5FfvHYL/WuCMZ8W/q
BQb2tYZ3y/fcyOjlO47z4vjcs31H07YKICPlUv5HqdhvpX4v22STUc6rbq+Q
OTyf1Jd7/XPJSO63YU4i9m8RWe2MfDJC1TENOdjCfAFx08VkVOwyWNqKnUxS
07arIqPdchYVnPMsKPmaFWffTkZTYzu07bH773hp/7dERjeyTThPLOD9Z+Rw
xG6FjJJOtO1TwZ6+cHOjFYuMlnwTj+lgc5w60XybzIF87bMPmmIL8f/T0uPk
QMFKpDsB2EbNGlrS2zmQipDUsWHsDtk1mjOyHCjy/K1o90UWGIsviE3Ic6A8
HlVOH+yRvf3rxk5woB1+F28EYy9sLvzap8iB5IJEpj5gbxs3P9eqyoFGjvHe
b8TWfV93Nl2fA8WaNu/fuoTPZ86XGlYOHAglbnz/DpvngdKHICcONHNdQTwa
27iPbVWRMwe6zaX4KQl7psCufLUrB/pKn3tZiM1796pc9AsOdLeoK/YX9o3G
I/u+h3CgW7p//uNfZsGifzvH8WI8XnsLRwD2KXZ/4+ulHKhA9sGqEOxXFmdL
PD9zoHUKT8jvsQWUPju2feFAfT1l3z5in55LmrzXyIEmNe2na7F9Lj3qjvqD
55viuIdthQW7+fcW0DkoSN/1UK4Rdljq4obdVApil63UvonNrdBwS4FOQV8P
sPeaYVNN7DY5cFGQkaH3oD32QMJn09HNFPQqR/PJS+xYKSOeht0UdNfxOj0L
W0Qj2N5PmYJqar2jSUwWRPwyr0tVoaCCywYiNOxtlkioTo2CdFUORnNi0/0G
6zk0KajxC8VtM/bQD6nd9noUtJb0qX83doJJc4veHQrqaOg6powt6sQpzv8C
x8XrTd2wnz3fIc/9ioKe6ZIqPLD734gpr/WmoFW6F3heEM/PPG/I9KWgl0MP
Pr7G3jL+zvPXWwqypf8XHIbNZnygJyyRgpYZrQbZ2N+VNfx21lCQvaTIzz5s
yQtXw7bWUVAK+xmPQWxfE6uEdQ0UJOBqemgEW/1xQDGriYLOODZbjGOX5XWN
/m6nIIOOobQF7JSDd09FDFNQ932GzhoWC9w2ec8IrKKia+0nJMSx3wfdcz7J
SUUKOvr/SWCXbdek3VxDRbYzHnlS2GzCG3g+bKAiw/0yh2SxnST95KV4qYhL
ruSnIradbpCryn4qyo2e1j2P7d9+n8v8IBV11WVq6mJnGOoFeIlRUX4SS+ki
9uQNnrgWCSoSPaK65zL2Xft3NYbyVNSy9vFHY+ybQeEbrDWoqJ7mv2CJ/XT7
o7f+56hIU+TAR2vs6HCjXdlaVHTucIGxLXZPnKDUsi4VCVT9yr+PfSXnvZ77
FSryUR464Yx9oT0u/O09KnI7+OXVc2zl7R8Pfn5NRZT1Qo4R2Op8X81K/ajI
mmM4LhJbc8e/hOIAKroU/7MpCltv54E9BcFUFLnp4o4YbNNd8fyZkVQ0Pifq
l4D9cn/Eurg0KnJe0GemYfscKNaISaeiSljHlo4dcPDXi/eZVLSsc4xFOEyM
jx6RS0V9tWyzmdipEm/YgkupyJitvSIXu1nOZ+J5ExVJlrlMlmC3yaeKebZQ
0VPL8PpS7J/HGyw8vmGrO8SWYfcB14hrOxWpnLTWKseeOfmsx+kPFZnv+v3y
C/Y29UctdyeoaLvP8dB6bD6N8A0WU1R0dmVJtwFb8GzRObMZPL9rWVxfsUU1
l2tvLVBRZ9wh20ZsOZ0H5UbsNCSiEry/hcivgWWm9gYaKo9JgB/Yr5/Ejypt
oqFrrLE2wuXx3YJyW2jo6yUn83bifjOaXrt4aEg93823A3vulfitaQEailyK
qukk8lU8uS3wMA1xzzHHurE/94uee36Ehj5K2pn9wZ7lvP7UWZKG+C+aDhI2
0GuZuClDQ/rLXR092Psm0mukEQ0ZNip+7CP6V8jOqf0cjttkbR0i8nEm+VO9
Fg0JMb2dCYvc6x8qPY/n58zTR9grX1c38SIN8ew682EY+7LO0UOOV2kow+qG
6Cj29NO533z3aOjL6M5/Y9h7k8S4N1jR0P1fWgr/sPWbb6lTbPB4oWt+hEv4
f+SM2dNQ4H0hyXHsV9k5r4ucaei2peNtBvae4f9OGnnRUGNLS9gk9vanj+ac
fWiI82rKAOH1gh4fQn1paHaPycEp7AU9/00/A2kICd7NJlxXldKrG47zHX6+
aBq71CQzyDaShsY3GK0QzmIrUPN7T0PWSUZyM9jhMtXpjXE0lGmjmkHYOr7X
Ve0jDWXPb3o7i33r1Ii06Sf8fIctTYQNuhmjzzJo6GKnEG0O+/Q25vnKHBoy
qDS3JLzt2TZhhVIaMsnjkpnHLrqlUX60mYYEeEdCF7DTyToPdFtx/U4uVBKO
D9c/YNtGQ3yyaJzw6++3/NM6aEhnwOX4IraJ8hOTA700xJuwponwpd5n29T6
cX9UCk0TPuviXXdnkIYiRl25l7Cls0Mk40ZpqHKj5CXCq/dmcwhN0xBd2buN
MKusMAfN0tA78TPThKevlJtfnachTzmjDcvYXYFNrSHLNPSzN0uF8Efq3+it
FDoSoJ9IJxwTNal3lEZHg15idYTfnljg0l1FR94HffsIu9lT7XzX0NFe/fRN
K9gXBwROr+Gmo+U1kWaEj7BupNC20VGJ3bwzYa5tH7aSeOkon/nnNeESFamR
2R10ZM9pnUVYJFnFu3s3HXE+SF8kTKr0mu/YS0fVt6tXM7E7f7Vc+7aPjgq1
nXkJ+6y/IllzkI6soFaG8LyNdXu6FB3vv+1WhJtfZiumSOO4jo4z4aSY5Q/x
x/Dz4qRfEDb67u4cepyObnFSoglXy77b5XGajiwte5oIR5/vfvlYmY58rd52
EnY23z3rqEJHc+/pg4SPhKVWWWrQ0e15riXCb9nLLfR16cj/YMdOFrYt76rv
Ohfp6FjobRHCZyXOonOX6KgoMvswYdKNHxtPGdLRH8MQRLjz4Q6nE1fpKMtD
8gzhrEDjfplrdNQk6nuOsFnV3+yDN+iILSzKkLDSH3FBkVt09K7yoglhgUX7
50J36Og1z3dTwq372Q23WuD11sncJyzvvYXEbkdHj/3jXhHmjtc3W7Knozqd
el/CjJLw1pkHdKROrwwiHD25L27EiY5+WUpGEnbmvLe+35mOmOJJMYT1hDP+
+/2IjsyYiwmEuS6cUG91oyPbFMFPhAfuumY2uNPRZ7elTMIlHlX81c/oqEXt
Y+7/85OrPVH4ko5+3E0p+X9+moP0c7zoSDl64TNhkdHOz5986Ojyw11fCHfx
3QqM86ej8kTuesIXdsv3dwbS0aWZI42EGw9ukNwYjPMtKtpCuOxEfpNTKB0Z
MZN//H/9yj4Cn8Lp6Oig/E/Cmedu3BuMpCNXjQ9dhOON1q3RjqWjHQzRHsKC
d/oue8TT0fZzJ/oIv7XKTSxIpKO/llIDhF89uX5mbyodUda0DBOmvpAJMkij
IzFXx1HCj/zWDLxOp6OJdM4xwtbR2a7L2XRURRscJ2ySeU3wVgEdqRiaTxK+
WMlZ3FRCR2P5UdOEVb9nGshX0NFil8/s/+c/dHUxtpqOwg4fnycstDpDyqmZ
js6+G1okTDtAt9L6SUfrjJuXCYek612JZdLR8D4iXSwQl0tQWxJchdjZ/v9B
/wOm5Gwr
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9500000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {0.9999999999999998, 2.0000000000000004`}}, {{
     0, 3.141592653589793}, {0.9999999999999998, 2.0000000000000004`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.780716639800304*^9, 3.780716673379182*^9}, {
   3.7807167260016947`*^9, 3.780716731587092*^9}, {3.7807182664631443`*^9, 
   3.780718290585095*^9}, {3.780718352329049*^9, 3.780718377225169*^9}, 
   3.780718525965521*^9, {3.78071865858617*^9, 3.780718700675215*^9}, {
   3.780718744062915*^9, 3.780718771164098*^9}, {3.7807188460536413`*^9, 
   3.780718863010854*^9}, {3.780718901309901*^9, 3.780718936184773*^9}, 
   3.780718981465678*^9, {3.780719421187744*^9, 3.780719444974429*^9}, 
   3.780719476185306*^9, 3.780719621198045*^9, 3.7807213311537447`*^9, 
   3.780721899737279*^9, 3.780791615302298*^9}]
}, Open  ]],

Cell["And the second order filter:", "Text",
 CellChangeTimes->{{3.780708177746344*^9, 3.7807081882625437`*^9}, {
  3.780708230968349*^9, 3.7807082336480837`*^9}, {3.780713194476166*^9, 
  3.780713197436171*^9}, {3.780713818364286*^9, 3.780713819210517*^9}, {
  3.7807153857464123`*^9, 3.780715396584736*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"secondOrderHighShelf", "[", 
    RowBox[{"z_", ",", "\[Omega]c_", ",", "g_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a0", ",", " ", "a1", ",", " ", "a2", ",", " ", "b0", ",", " ", "b1", 
       ",", " ", "b2", ",", "\[Gamma]", ",", " ", "G"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Gamma]", " ", "=", " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"\[Omega]c", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\n", "     ", 
      RowBox[{"If", " ", "[", 
       RowBox[{
        RowBox[{"g", " ", ">", " ", "2"}], ",", "\n", "            ", 
        RowBox[{"G", " ", "=", " ", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}], 
             RowBox[{"g", "^", "2"}]}], "-", " ", "1"}], ")"}], "/", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "/", "2"}], ")"}], 
             RowBox[{"g", "^", "2"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"1", "/", "4"}], ")"}]}]}]}], ",", "\n", "            ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"g", " ", "\[GreaterEqual]", " ", 
           RowBox[{"1", "/", "2"}]}], ",", "\[IndentingNewLine]", "         ", 
          RowBox[{"G", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{"1", "/", "g"}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}]}], ",", "\[IndentingNewLine]", 
          "         ", 
          RowBox[{"G", " ", "=", " ", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{
                RowBox[{"2", 
                 RowBox[{"g", "^", "2"}]}], "-", "1"}], ")"}], "/", 
              RowBox[{"(", 
               RowBox[{"-", 
                RowBox[{"g", "^", "2"}]}], " ", ")"}]}], ")"}], "^", 
            RowBox[{"(", 
             RowBox[{"1", "/", "4"}], ")"}]}]}]}], "\[IndentingNewLine]", 
         "   ", "]"}]}], "\[IndentingNewLine]", "]"}], ";", "\n", "        ", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"a0", " ", "=", " ", 
       RowBox[{
        RowBox[{"\[Gamma]", "^", "2"}], " ", "+", " ", 
        RowBox[{"G", "^", "2"}], " ", "+", " ", 
        RowBox[{
         RowBox[{"Sqrt", "[", "2", "]"}], " ", "G", " ", "\[Gamma]"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"a1", " ", "=", " ", 
       RowBox[{"2", 
        RowBox[{
         RowBox[{"(", " ", 
          RowBox[{
           RowBox[{"\[Gamma]", "^", "2"}], " ", "-", " ", 
           RowBox[{"G", "^", "2"}]}], ")"}], "/", "a0"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"a2", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "^", "2"}], "+", 
          RowBox[{"G", "^", "2"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"Sqrt", "[", "2", "]"}], "G", " ", "\[Gamma]"}]}], ")"}], 
        "/", "a0"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"b0", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "^", "2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"G", "^", "2"}], " ", "g"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"Sqrt", "[", "2", "]"}], "G", " ", 
           RowBox[{"Sqrt", "[", "g", "]"}], "\[Gamma]"}]}], ")"}], "/", 
        "a0"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"b1", " ", "=", " ", 
       RowBox[{"2", " ", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{
           RowBox[{"\[Gamma]", "^", "2"}], " ", "-", " ", 
           RowBox[{
            RowBox[{"G", "^", "2"}], " ", "g"}]}], ")"}], "/", "a0"}]}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"b2", " ", "=", " ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"\[Gamma]", "^", "2"}], " ", "+", " ", 
          RowBox[{
           RowBox[{"G", "^", "2"}], " ", "g"}], " ", "-", " ", 
          RowBox[{
           RowBox[{"Sqrt", "[", "2", "]"}], "G", " ", 
           RowBox[{"Sqrt", "[", "g", "]"}], "\[Gamma]"}]}], ")"}], "/", 
        "a0"}]}], ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", " ", "+", " ", 
         RowBox[{"b1", "/", "z"}], " ", "+", " ", 
         RowBox[{"b2", "/", 
          RowBox[{"z", "^", "2"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"a1", "/", "z"}], "+", 
         RowBox[{"a2", "/", 
          RowBox[{"z", "^", "2"}]}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"secondOrderHighShelf", "[", 
     RowBox[{
      RowBox[{"zz", "[", "\[Omega]", "]"}], ",", "1", ",", "2"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQBWIQfSWE942C9hvH2avTPoDoS3talikBaSbdratBdMYl
4yMgOqS26jKI7pRwfwOi6w4/AdMHfrzhVwbSE6Ia7UF00wseDxDdbsIPpqee
+B0AojVOxoaAaA+Gn5Eg+ov7rWgQfWXCgmIQfSFlShlYncbTehAdy2U+C0Sb
nN+1GkRn1S5dA6JFprduB9F1oekHQPQOo7fHQXTY02kvQPSsdo33IPqSifoH
EK11Y8M/EN2QkiypAnLPXCZFEP1lOweYVvRu1gDRfxpW6YBoU1MzQxD9a1qb
EYiunMLiCqLPTspwB9G5MlOTQPRN9s3JINpj6pViEN2gxVICogECIZNU
  "]],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
qL4ksAqx/f8H/R894mub
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9500000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {0.9999999999999996, 2.}}, {{0, 3.141592653589793}, {
     0.9999999999999996, 2.}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.780712891249568*^9, 3.78071295734757*^9}, 
   3.780713025123111*^9, {3.780713096517207*^9, 3.780713124284912*^9}, {
   3.7807131691014347`*^9, 3.780713183287384*^9}, 3.7807149018195353`*^9, {
   3.78071505063474*^9, 3.780715067802677*^9}, 3.7807152945661383`*^9, 
   3.780719661618289*^9, 3.7807916155411158`*^9}]
}, Open  ]],

Cell["And the first order filter:", "Text",
 CellChangeTimes->{{3.780713205426074*^9, 3.7807132113638887`*^9}, {
  3.780713801460853*^9, 3.780713802002818*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"zz", "[", "\[Omega]_", "]"}], ":=", 
   RowBox[{"\[ExponentialE]", "^", 
    RowBox[{"(", 
     RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}], ")"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"firstOrderHighShelf", "[", 
    RowBox[{"z_", ",", "\[Omega]c_", ",", "g_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a0", ",", " ", "a1", ",", " ", "a2", ",", " ", "b0", ",", " ", "b1", 
       ",", " ", "b2", ",", "\[Gamma]"}], "}"}], ",", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"\[Gamma]", " ", "=", " ", 
       RowBox[{"Tan", "[", 
        RowBox[{"\[Omega]c", "/", "2"}], "]"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"a0", " ", "=", " ", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"g", ">", "1"}], ",", 
         RowBox[{"\[Gamma]", " ", "+", " ", "1"}], ",", 
         RowBox[{
          RowBox[{"\[Gamma]", " ", "*", " ", "g"}], " ", "+", "1"}]}], 
        "]"}]}], ";", "\[IndentingNewLine]", 
      RowBox[{"a1", " ", "=", " ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"g", ">", "1"}], ",", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "-", "1"}], ")"}], ",", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"g", " ", "\[Gamma]"}], " ", "-", " ", "1"}], ")"}]}], 
         "]"}], "/", "a0"}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{"b0", " ", "=", " ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"g", ">", "1"}], ",", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]", " ", "+", " ", "g"}], ")"}], ",", 
          RowBox[{"g", " ", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "+", "1"}], ")"}]}]}], "]"}], "/", "a0"}]}], 
      ";", "\[IndentingNewLine]", 
      RowBox[{"b1", " ", "=", " ", 
       RowBox[{
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"g", ">", "1"}], ",", 
          RowBox[{"(", 
           RowBox[{"\[Gamma]", "-", "g"}], ")"}], ",", 
          RowBox[{"g", 
           RowBox[{"(", 
            RowBox[{"\[Gamma]", "-", "1"}], ")"}]}]}], "]"}], "/", "a0"}]}], 
      ";", "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", " ", "+", " ", 
         RowBox[{"b1", "/", "z"}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"a1", "/", "z"}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"firstOrderHighShelf", "[", 
     RowBox[{
      RowBox[{"zz", "[", "\[Omega]", "]"}], ",", "1", ",", "2"}], "]"}], 
    "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780708192416605*^9, 3.780708227208448*^9}, {
  3.7807117321480494`*^9, 3.780711773661744*^9}, {3.7807119696194344`*^9, 
  3.780712091827799*^9}, {3.780712290221745*^9, 3.780712295148864*^9}, {
  3.780712575405365*^9, 3.780712956042305*^9}, {3.7807130244033823`*^9, 
  3.780713024475162*^9}, {3.780713095868235*^9, 3.780713122930805*^9}, {
  3.7807131677812843`*^9, 3.7807131828212833`*^9}, {3.780713218127138*^9, 
  3.780713225828051*^9}, {3.7807138038444023`*^9, 3.780713812675151*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
Dvg/OoMoEA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9500000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {1.0000000000000047`, 1.9999999999999991`}}, {{
     0, 3.141592653589793}, {1.0000000000000047`, 1.9999999999999991`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.780712891249568*^9, 3.78071295734757*^9}, 
   3.780713025123111*^9, {3.780713096517207*^9, 3.780713124284912*^9}, {
   3.7807131691014347`*^9, 3.780713183287384*^9}, 3.780713228131393*^9, 
   3.7807138132846117`*^9, 3.780791615667225*^9}]
}, Open  ]],

Cell["\<\
We compare the adjustable slope with the first and second order filters. The \
adjustable slope filter in the RBJ cookbook is exactly equivalent to the \
second order filter in Rusdy Allred\[CloseCurlyQuote]s book when s=1. When \
s=0.5 it is equivalent to Rusty Allred\[CloseCurlyQuote]s first order filter \
at a different cutoff frequency. \
\>", "Text",
 CellChangeTimes->{{3.780715311703354*^9, 3.7807153238560057`*^9}, {
  3.780719668109982*^9, 3.780719679986863*^9}, {3.780720252651224*^9, 
  3.780720353911161*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Show", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"variableSlopeHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", "\[Omega]c", ",", 
          RowBox[{"1", "/", "2"}], ",", "s"}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", 
         RowBox[{"20", "/", "24000"}], ",", "\[Pi]"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"firstOrderHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"2000", "/", "24000"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", 
         RowBox[{"20", "/", "24000"}], ",", "\[Pi]"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"LogLogPlot", "[", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"secondOrderHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"2000", "/", "24000"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], "]"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Omega]", ",", 
         RowBox[{"20", "/", "24000"}], ",", "\[Pi]"}], "}"}], ",", 
       RowBox[{"PlotRange", "\[Rule]", "All"}]}], "]"}]}], 
    "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "1"}], "}"}], ",", "0.3", ",", "1"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"\[Omega]c", ",", 
       RowBox[{"2000", "/", "24000"}]}], "}"}], ",", "0", ",", "\[Pi]"}], 
    "}"}]}], "\[IndentingNewLine]", "]"}]], "Input",
 CellChangeTimes->{{3.780719681598487*^9, 3.780719735735024*^9}, {
  3.78071989028406*^9, 3.780719900777763*^9}, {3.780719935938182*^9, 
  3.780719965786298*^9}, {3.780720034769857*^9, 3.780720036729396*^9}, {
  3.780720151109584*^9, 3.780720169883499*^9}, {3.78072020525909*^9, 
  3.780720222033929*^9}, {3.7807211095015297`*^9, 3.7807211135568533`*^9}, {
  3.780790249135612*^9, 3.780790305648142*^9}, {3.780790378485714*^9, 
  3.7807905346444397`*^9}, {3.780791344589905*^9, 3.780791390475005*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 1, $CellContext`\[Omega]c$$ = 
    Rational[1, 12], Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{{
       Hold[$CellContext`s$$], 1}, 0.3, 1}, {{
       Hold[$CellContext`\[Omega]c$$], 
       Rational[1, 12]}, 0, Pi}}, Typeset`size$$ = {
    259.2, {79., 79.07072576973215}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`s$624781$$ = 0, $CellContext`\[Omega]c$624782$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`s$$ = 1, $CellContext`\[Omega]c$$ = 
        Rational[1, 12]}, "ControllerVariables" :> {
        Hold[$CellContext`s$$, $CellContext`s$624781$$, 0], 
        Hold[$CellContext`\[Omega]c$$, $CellContext`\[Omega]c$624782$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Show[
        LogLogPlot[
         Abs[
          $CellContext`variableSlopeHighShelf[
           $CellContext`zz[$CellContext`\[Omega]], $CellContext`\[Omega]c$$, 
           1/2, $CellContext`s$$]], {$CellContext`\[Omega], 20/24000, Pi}, 
         PlotRange -> All], 
        LogLogPlot[
         Abs[
          $CellContext`firstOrderHighShelf[
           $CellContext`zz[$CellContext`\[Omega]], 2000/24000, 1/
           2]], {$CellContext`\[Omega], 20/24000, Pi}, PlotRange -> All], 
        LogLogPlot[
         Abs[
          $CellContext`secondOrderHighShelf[
           $CellContext`zz[$CellContext`\[Omega]], 2000/24000, 1/
           2]], {$CellContext`\[Omega], 20/24000, Pi}, PlotRange -> All]], 
      "Specifications" :> {{{$CellContext`s$$, 1}, 0.3, 
         1}, {{$CellContext`\[Omega]c$$, 
          Rational[1, 12]}, 0, Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     
     ImageSizeCache->{296., {121., 124.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.780719710599794*^9, 3.780719737313651*^9}, {
   3.780719908510676*^9, 3.780719966408704*^9}, 3.7807200373108673`*^9, {
   3.780720152003646*^9, 3.780720170746499*^9}, {3.780720208967841*^9, 
   3.7807202225290737`*^9}, 3.780721114310055*^9, {3.780790250458386*^9, 
   3.780790273876692*^9}, 3.780790307145047*^9, {3.780790383782625*^9, 
   3.780790399561014*^9}, 3.780790431654443*^9, {3.780790483538739*^9, 
   3.7807905356588907`*^9}, {3.7807913550040207`*^9, 3.780791391858099*^9}, 
   3.780791615754922*^9}]
}, Open  ]],

Cell["We now port the R B-J low shelf filter", "Text",
 CellChangeTimes->{{3.7807212938236027`*^9, 3.780721315208316*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"zz", "[", "\[Omega]_", "]"}], ":=", 
  RowBox[{"\[ExponentialE]", "^", 
   RowBox[{"(", 
    RowBox[{"\[ImaginaryI]", " ", "\[Omega]"}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"gainToDb", "[", "g_", "]"}], ":=", 
   RowBox[{"20", 
    RowBox[{"Log10", "[", "g", "]"}]}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"variableSlopeLowShelf", "[", 
    RowBox[{"z_", ",", "\[Omega]c_", ",", "g_", ",", "s_"}], "]"}], ":=", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
      "a0", ",", " ", "a1", ",", " ", "a2", ",", " ", "b0", ",", " ", "b1", 
       ",", " ", "b2", ",", "A", ",", " ", "\[Alpha]"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"A", " ", "=", " ", 
       RowBox[{"10", "^", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"gainToDb", "[", "g", "]"}], "/", "40"}], ")"}]}]}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"\[Alpha]", " ", "=", "  ", 
       RowBox[{
        RowBox[{
         RowBox[{"Sin", "[", "\[Omega]c", "]"}], "/", "2"}], " ", "*", " ", 
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", " ", "+", " ", 
             RowBox[{"1", "/", "A"}]}], ")"}], "*", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"1", "/", "s"}], " ", "-", " ", "1"}], ")"}]}], " ", "+",
           " ", "2"}], "]"}]}]}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"b0", "=", "         ", 
       RowBox[{"A", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "+", "1"}], ")"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "-", "1"}], ")"}], "*", 
           RowBox[{"Cos", "[", "\[Omega]c", "]"}]}], "+", 
          RowBox[{"2", "*", 
           RowBox[{"Sqrt", "[", "A", "]"}], "*", "\[Alpha]"}]}], ")"}]}]}], 
      ";", "\n", "     ", 
      RowBox[{"b1", "=", "   ", 
       RowBox[{"2", "*", "A", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "-", "1"}], ")"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "+", "1"}], ")"}], "*", 
           RowBox[{"Cos", "[", "\[Omega]c", "]"}]}]}], ")"}]}]}], ";", "\n", 
      "     ", 
      RowBox[{"b2", "=", "         ", 
       RowBox[{"A", "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "+", "1"}], ")"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "-", "1"}], ")"}], "*", 
           RowBox[{"Cos", "[", "\[Omega]c", "]"}]}], "-", 
          RowBox[{"2", "*", 
           RowBox[{"Sqrt", "[", "A", "]"}], "*", "\[Alpha]"}]}], ")"}]}]}], 
      ";", "\n", "     ", 
      RowBox[{"a0", "=", "                 ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", "+", "1"}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", "-", "1"}], ")"}], "*", 
         RowBox[{"Cos", "[", "\[Omega]c", "]"}]}], "+", 
        RowBox[{"2", "*", 
         RowBox[{"Sqrt", "[", "A", "]"}], "*", "\[Alpha]"}]}]}], ";", "\n", 
      "     ", 
      RowBox[{"a1", "=", "      ", 
       RowBox[{
        RowBox[{"-", "2"}], "*", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"A", "-", "1"}], ")"}], "+", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"A", "+", "1"}], ")"}], "*", 
           RowBox[{"Cos", "[", "\[Omega]c", "]"}]}]}], ")"}]}]}], ";", "\n", 
      "     ", 
      RowBox[{"a2", "=", "                 ", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"A", "+", "1"}], ")"}], "+", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"A", "-", "1"}], ")"}], "*", 
         RowBox[{"Cos", "[", "\[Omega]c", "]"}]}], "-", 
        RowBox[{"2", "*", 
         RowBox[{"Sqrt", "[", "A", "]"}], "*", "\[Alpha]"}]}]}], ";", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
        RowBox[{"normalize", " ", "a0"}], " ", "=", " ", "1"}], " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"b0", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"b1", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"b2", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a1", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      RowBox[{"a2", "/=", "a0"}], ";", "\[IndentingNewLine]", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"b0", " ", "+", " ", 
         RowBox[{"b1", "/", "z"}], " ", "+", " ", 
         RowBox[{"b2", "/", 
          RowBox[{"z", "^", "2"}]}]}], ")"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", " ", "+", " ", 
         RowBox[{"a1", "/", "z"}], "+", 
         RowBox[{"a2", "/", 
          RowBox[{"z", "^", "2"}]}]}], ")"}]}]}]}], "\[IndentingNewLine]", 
    "]"}]}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Abs", "[", 
    RowBox[{"variableSlopeLowShelf", "[", 
     RowBox[{
      RowBox[{"zz", "[", "\[Omega]", "]"}], ",", "1", ",", "2", ",", "1"}], 
     "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Omega]", ",", "0", ",", "\[Pi]"}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.780715414166746*^9, 3.7807155486771297`*^9}, {
   3.780715579642496*^9, 3.7807158601344633`*^9}, {3.78071591609094*^9, 
   3.7807159249456997`*^9}, {3.7807159835021887`*^9, 3.780716069833047*^9}, {
   3.780716267398106*^9, 3.780716274585244*^9}, {3.780716442510419*^9, 
   3.780716530323523*^9}, {3.780716637136631*^9, 3.780716730546495*^9}, {
   3.780718196122012*^9, 3.780718205816861*^9}, {3.780718235898273*^9, 
   3.780718289532329*^9}, {3.7807183459018297`*^9, 3.780718376164177*^9}, {
   3.780718464368986*^9, 3.780718524791918*^9}, {3.7807185793442593`*^9, 
   3.7807185800625257`*^9}, {3.780718626923358*^9, 3.7807186286420937`*^9}, {
   3.7807186693468857`*^9, 3.780718699361515*^9}, {3.780718740413671*^9, 
   3.7807187699708023`*^9}, {3.780718844572268*^9, 3.780718862188448*^9}, {
   3.780718900136838*^9, 3.780718900256707*^9}, {3.7807189304103193`*^9, 
   3.780718934930532*^9}, 3.780719005916358*^9, {3.780719420308577*^9, 
   3.7807196130923233`*^9}, {3.780720856553039*^9, 3.780720860212535*^9}, {
   3.780721347451477*^9, 3.780721347816463*^9}, {3.780721600364406*^9, 
   3.7807218185303383`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
GRTzHKaBq/W9a9G6dKi5FSR1XA/HUyqsOMCADhHWWd+4sdPHnzG7G9FBj/Nh
X50uDcau5j4yPUYHCLwdrYpt6TnylsOWDpJk5R0COjTQjNj/3dufDsZqyr4j
B3D+1q2aWdfSQY5f83g60CDRNTHqDT5nz2ZHeV3E1tli1DeOz2H5Gdexjdj+
txPOOHbRgUUp58HjfTRg23vA3usHHV5K7hD10aQBa2bgrUh2BgR+NOc+u5cG
pBi+1CZ8L+k8nP7YXA3HT6/0F5cpvlfL+nNtwNZasFEwscDvidbb63p20cDX
LD+3+zR+jzGanrbCZuY+XvHdkQF6mptULqni9XA3roMexoDCq1JbgpRpwHDY
xlDqYgBtz3aFJQUa2AsYpcn3McBzaGN5HXZHuetxmW/4PTilxfsxdip3ZY4Y
vmdXOWeFyGObZVlcouL3lk/BM1Pnd2AvVY3/WcOE3EWEY3rlcP5p/jWpkWVC
bM4+5j+20eArj29ylRwTeit8LK0Im3eMn1G+gwmJqwzveIDtHaKeVqTEhLpc
rucrYpsO3CNnqDOhb1qeH3xkaLByW7QkWp8JHabv/iWxlQbGNYckHe2Z0Lkm
B/a7kjTILZtzsb7ChIayO05YYQsWvKgyv8qEHsUNtqlgD6YsntZwYUL7rS/u
HNtCA6dHKdHsHkR50lt97NAT7Nyv7zOh/mO6t4Q306CV1rDYk8yEJNberO7Y
SAOVCVe95lQmJMM5HJyF/XREIqoijQl5HBO8HoJ9tuuGSmImE9K8eCNbD5tW
IuN4rZAJ3YzoLyoXp8G6gMDvXA1MiCNUZTpTjAYmYnqftH4wIa8fwwfTRWjg
/qA69uxPJvT619TlYOxnyxqXfCaZkEpIfp4d9nivInPxXyaUHdKXI43tEymi
rPiPCQ3a/7R4KYzXI/ffyI3szChs0FokQQjnJyny9IosM9q7UlCWu4EGcs7r
tgvLM6NTjAyRKGzTwaAFNQVmdFzaJvom9vPyW6HXlJlRKyNwZh+2iqdd9cRe
ZrQa7bfxgwANzs1qSPcaMqOD/wI1fq6nQenYyO+8q8yoctW/ei8/Derbnzlm
ODGjvubBmC3Y7eXmU8kuzGg+sCaYA3s8sn421p0ZGWe353/howG/7tvlOz7M
6KR0moI39pUkF/YjIcyoR+dFdA0vDUQvMUuNpTOjqqbYUhseGmw1K04cyMDj
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
Vto=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0.9500000000000001},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{
   "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None},
  PlotRange->
   NCache[{{0, Pi}, {1., 2.0000000000000013`}}, {{0, 3.141592653589793}, {1., 
     2.0000000000000013`}}],
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.780721819407371*^9, 3.7807916169398527`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equivalence of RBJ and Allred Second order shelf filters", "Section",
 CellChangeTimes->{{3.780791532205015*^9, 3.780791550439406*^9}, {
  3.780791626606907*^9, 3.780791634869154*^9}}],

Cell["\<\
When we set the slope of the RBJ filter to one, it is equivalent to the Rusty \
Allred second order shelf\
\>", "Text",
 CellChangeTimes->{{3.780791636145278*^9, 3.7807916600685*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"secondOrderHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"2000", "/", "24000"}], ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"variableSlopeHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"2000", "/", "24000"}], ",", "2", ",", "1"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Allred\>\"", ",", "\"\<R B-J\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hue", "[", 
         RowBox[{"7", "/", "12"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"{", 
          RowBox[{"Dotted", ",", "Black"}], "}"}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Pi]", " ", 
           RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.45", ",", "2.1"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"secondOrderHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"2000", "/", "24000"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"variableSlopeHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"2000", "/", "24000"}], ",", 
          RowBox[{"1", "/", "2"}], ",", "1"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Allred\>\"", ",", "\"\<R B-J\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hue", "[", 
         RowBox[{"7", "/", "12"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"{", 
          RowBox[{"Dotted", ",", "Black"}], "}"}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Pi]", " ", 
           RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.45", ",", "2.1"}], "}"}]}], "}"}]}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.780791571393579*^9, 3.7807916045263243`*^9}, {
  3.780791665727162*^9, 3.780791709803494*^9}, {3.7807917495865717`*^9, 
  3.780791835859074*^9}, {3.780791884786034*^9, 3.780792086436514*^9}, {
  3.780792118195956*^9, 3.780792163564447*^9}, {3.780792251919773*^9, 
  3.780792411552292*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Hue[
         NCache[
          Rational[7, 12], 0.5833333333333334], 1, 1]], 
       LineBox[CompressedData["
1:eJwd13c8V98fB3Dja68PPj5ElMrMiIwy7ltURssKKSuVSBpWRZIiITMZZSQi
NIxEwz0yE6Ike38+9kyy+93P7597H8/Hfdxz3ud134/HuUfy9CXzs0wMDAw9
xIV+TzytvMFeJ4wSjR6JsHnnYO7ep/40VQuj5tsaJmV5ORiE3p98WCmMlmZz
v1MHczDay6HOrbgw8kr5tqnQ/AWmvpzwbk+JMArZPnhRY08u9j2K4cr5TGEk
69fOPiaWjz3PUDyvlCGMVDY/Zaqxzceuv7V1WEgTRgOyK2+Vk/OxrV3FRwIf
CyNN382XX4q+xDykXeUTY4XRfPsyp++2VxjXp5ah2kBhJDYk91RF5g3W+22j
80GAMFptTMszO/QGKxzc+d3CXxj9vKLt/PnSG8yWPQT1+Qojh+2V25PK3mA5
Flopfz2EkeqC/UNlswJs/3iGlYydMPJwmhh5Hl2IBQh7fQnZK4xSV/KTjlq9
xRL6Bhs3awoj3mDDJd6wt9ibbLPvhWrCyGSuu+lw+VtsUFO5q1dZGDk31Awd
kC3BDtqMT2pICyPv9vGdx5jeYbxJjqQRAWFkrePA2/GtFJNx+ka+SRJGrBv6
/7Fxl2F6ctgmQV5hJKHO+b7GqAy7Wia2DTiEUX75bD1jVRnW1tG2O+EfBT3x
xjgeVLzHUkSPWBtOUtCJPoNDep0fsZLBDyd7xijIR5NNQHvrJ6wpV97Rc4SC
riwYXOo79wlj0GZ3TRukoKbkR+07Fz9hZ05W3vjbTkE2El3HGcVxTOHJ3tTs
agpi06lCD2oQ9lFcmsqWRkGqXTteTN6uxB589empeUJB3jKqdZRXlZj99dqf
wckUZFREmszsrMT+tZ6vYX5EQTedfKNm1aow/Yi87H8RFGTA/0zXYboKq13Z
5fb3BgXd+nDS1827BkvMuX265BoFHahpXNPPqcHOW3239fahoMukmZTIrhqM
s9Dz0O8rFMTi99/+Owa12GHXEoWZ8xQ0G/726D+ROuz7L+0ZmhUFUXYpzKh2
fcEygiNGsiwpiDdv6OFHoXrMc3dP3xlzCvq05c/XetN6jBwV0Dx4hIIUdmzz
vl5Xj1kfrCjo3U9B7QmBZ/eVf8W6iw96takS+Qnu8YquasRGYsyWq3kpyFP9
qN3bbS3YAn7UIJqbgnK00oU+GbVgDNOHHthyUtC1vOGdmy61YKImByVnWChI
Ml7lXsvHFuwok7axyLoQ+u6jVmR96jtWcnVHktuEEIoU/Hn5XP4PrDJdckht
TAjVqx3kJrX/wJqbJBT/0YSQG3wNE/2vFRuX31QRNyiE7rYVZxy3a8UkhnjG
PnYIobdPX5P8yT+xYIu/e/jqhNAb92/6po/asNjbC0Ed1UJo/aWV+ZW6Niz1
9VzDs0ohVPFxPJFxtQ0r5Zp03IMLoaUXUc2eTr+wycr+UKcSITSfy33g/e52
zFKtvr0oUwj5Q/5i4XQHtl0o5ZrNbSGk4Gk/OV7dg/ksdX2bDxBC57pubEnj
6cXqukRlHvgLIX2hnn//jvdi7hmJPyt8hdDtzBrbptFerET5oepODyH00ZZ1
6CxXP2ZkEj65biuE7AuuH6WaDGDJivUGiTZCSG/XidowrwFsksTxWNVKCL0y
SAl7mDqAxfwKMXYxE0Ie39c+t/8ewDrPBD1vNhRCe1U8e7Bng5j7reuOz9SE
EHXxjrsTZRgrP136TldVCEnLmTF+PjiMkQ7+5W1XFkKMb3cJJ/gOY2+5vT9x
7xRCShnV8s86h7GNpMuiPpJCqFmv0fr0cyoWU+zSasQrhPodHnsHHh/BSsaO
G02PkFF2nmjOvOgEhgp94gqoZNR33Lamw3oCq/dL6PUaIqNeyZxPxvETWC9P
h9dqLxl9eJjE8IV/EmNVPfWUvY2MftYckXfhn8Ksbpxe2VZFRt0/X8XpKsxg
jgZ3DtAqyKikQcvS6OoM5sadGf0CJyP5K9o+s6UzWEAqVXrXBzIavcKlzLdj
Fnv++byFbiEZlVfISXK/m8UWOS/lW6eTUcxqmzp1cg5jaI36K5pKRm7vjs7s
FJrHOFPe6Pc+JiOp4SmZRt15TEJ5vv1MAhmNC20y2BY9jx208Ga5GklGL5vI
3xT3/sYePfazj/AnI8dnRfXBKQuYhkIoqcKGjES/CjL5v/2LheSOn7e0IqML
EY0BOjN/sZ+yRypGLMhowc0k+77cEuYlJXCV9xgZxUoL2H5LW8IKJJ78OHmA
yOPCvwiluGVMgf/No0UVMtJPMY26/mgV848SmLmvTEYuHzeX53esYl95vA3F
FcnIf0Um9Y74GubGqbVkIEtGZzbvz9qWvYZlM1ediJEgI4ULmu7mn9exbYu/
NitwkRGXGCP/H24GuOql5Y2zk1HecHIbjxoDVMw/aTRnJfI/d6At+CQDOM44
BVxnJKONiRCZhDwGSBmd6Kv5K4j2juuu2pgygkjXvwynYUE0buGht+slE/Ai
GbmET4IoIv3WivMHFkgu1/ih/kEQsf+WYDg5wwJSnw7cbC0VRF32HfubtrOC
znvnFv5iQZSemKSmFMkKF4rTrkfkCiJZ+Zr2hfNsUJcjXH87QRBdknAReaPJ
AZbZ0l5b4wVR8uivR2ueHNCXpS6BxwqiF8Wa+zrecMBihsXVtQeC6PjWJ7eM
FDhBKiVK1PeuIErxMNghJc8FQTFsF9yvCCLbI0vLQgY8wBtNEeK6JIgKWLZx
8N7ngaRIKfyFuyBq6t44/fIbD7wJNxAccSHqNzi1Z9SeF/qCb31wsifW699N
8gvmA50bf7msDwkiVeFNdQYrJPh7eiR/n5Qgqqzq2WJeJAhahu0mHNsFUcmE
1DzWJwgBO7+MNm8VRDoqlQUPuMjw30LuDsfNxPzroqctz5JBINjjSYCgIOrp
HR5IFRcChew/4R8YBVFs9kT03FMKXA6nyd35J4C+61+tdWmlQNGlX7Um6wKo
6Vie/1E2YdDaU8bcuSSAvjDrHrviIQyGX/z9lmYE0N9eygNZfRE4PcF8Qb1X
ALFt0QnbzyAKz78tsK93CaC4/Q0UXS1RGCuiPq/qEEAJl1V6S7xE4bJ/7aDF
TwF0/H50quqEKNzkCbe92iCAip2usl7oFYNEZQGT1+8F0Fi9xtRorzg0em6V
k0sQQEX3pK7dkJUEKx6LVvRQAPVpjesvm0lC7/PgWzaxAmhbvfLpbj9JmO0Y
/3nvgQDy+qx54UezJAjovQ2i3RFArz/YfUq7tQ1suE26n10WQBwOViMxc9th
IMv/nrYHUT9VoLlBcge4wWvVHxcEkKT0Dkt/8x3gd5V8n8lFAB3WZ0rUfbsD
Utt71Z3sBNCTLuv75wOlYDjTM0rCRADJ9j5cPqMkAxex51olhgJoH2dknuc5
GVj81U49ckAAKTQXD3KkyQAbF6ZzU08A2TiPMXznlwX5K+xjXRoCyKnmUcyf
dVm4pJuin7RdAC1ITyqWzcnDys+aP4Lr/Ghr+ICzvZkyaB3veti6wo9yjst7
ciYqg1/rzO74JX5UdrR38nifMqx9F7lKWeBHDXK6jqOau2D9m9u0yAQ/Ongv
eQNr2AUM9bwj4h38yDS5XIyRRRX0jLeH9LbxIz+rNJ1cRVW4XacpldbKj0Yb
Xgi8tlIFplpH563N/AiLWxD99kIV/qsq7NtWy49aq1Nf3LLcDWzlVu0yb/nR
tZ18tk4f1cBI94LvaCE/2nHDuFJ+Qg1CP96ivHjDj5oS9762E1UH9g85lvL5
/OgiZVMd8w114CxdaVZ4xo8ia47fvoBpAG9h6heVGH5kvN/s0N1uTSA/p73X
vsiPKnYZkhS9tSEmKzuP7QI/OhR8eie1QBt4s84/+XGeH9VctfXaPqMNbJnj
Ny+c4UcSGomqmhd0YOXptN7jk/zIoOLrmW5XXehLWaxZMeZHCQa5rkpBAKdS
3r2rMeRHonvbaB21AO1PruXEHuBHR+YycvjY9OD745X78vuI9br6p2FH9aAq
aeOw7R4ib1pt/vF+PciNZ/1RJs2PLr8zzvuPrA/S8bWVwTuI98V9Xq9p68Oz
h6HFZtv4USxb6NrhM/rwJI7z0Zg4Pwp25QlYfqsPUTG8JzYJ8aMkisb3BDsD
8HpA6bvGzI+qMz/xpJTvBwiWntDsJ6Ene6RFqxoNgUlLbuxHDwkx300j97Ea
QdX0zpFLXSSkk3JzKEjPCIxsVIay20goPSpe3O2tEZju1OkSbiSh+M+u97uy
jMGxxezr3zISav9U8e1axiHYFmL5Je4dCW0KDtKsGD4Ew1rWtcpvSWiKKuOU
I3MYzmeeqnR5Q0K0rKPjNq8Pw2Vflw+/npOQ6PLTnRdrjkCg+M28d3FEPQfX
4hw5TUH/+60XFjEkZLP9SN6vXabw372g7JlIElJU2d6Ra20KobP3nsmEkZDd
Vsex889NIboy9nFCIAlZ8387e8rIDJ665oT7XiSh48dquCZTzeHz2x8XNA1J
6Jmju/vNlOOgY1pqt7afhHz/+zr/rfE4lIw/OVahT0KZdaIGkRvH4cWWc7sP
YSQUwyTGaO5kBdH3l1bs1UlIiUfrGUnBGuztxMNCtpOQaWsys+EvG2j/y+h/
SJKE7m4tXavnPQHmsbSLpC0kdDjGtaT+4Ak4UPvaLFmUhBKYH73bV3oCFFT0
N73iJ6EzvV/CFJ7awgJHk2nePz4k6nxfbz78FIxiCWrqq3yov+yqSunXU9Dl
6SiCL/Khqrg4ZW5uO/jcM9/3fYoPPZs9p+ccaQfRBcKXVrr40EMWVD2bZA8K
J5weGJfyoYvRnPd+nnOEMzkLX0Yu86GV9E2LT9tPw6Dhvjp+dz7UaHovFGN1
BseRBzXaLnxIhLGPZKzmDHbSMpVRdnxIo6laMj/GGawyT3zUNOFDktU7MmrN
zoBRevmre9v5UHlk00HD0bNQA1wvCyT4UC314byB+DnY32ed17WJDxmbtqsi
83OwT2IuW5nEh4pcpNR18HOg9WT7019rvIh5uFL7TKoLKCSGxsm08aJzWw0z
Hvi4Qq7mzxizFl5k6j0dLFLsCrK/JKP9GnhRRf+Cg+a8K0hRPkR8+8yLpOcE
b2hcdgOJh1PBvq950dfP1CgnzwtAija/VhvKi0QFP118k3ARft/bbOeizYv4
K40Z7qtcgXGZzxvZGryoWeXoBz3bK9Bf65I+qsKLwlcd1GzuXIEmtqIhV1le
VP1nc+eLtivw4p6xm7sQL7JwrSuavX0VHO75+F6Z4UENYlt1OiY8wUpm86bC
cR5097bZnmVRLzhcW/F+nsqD/DqPVt4z8QItNp4Nz24edMtx5s5CrhcI3Xt2
1+cLD3L5V75V7oo3fA1pjvF7xoOWOut+jgn6wmdpn90fU3lQ2rqm/iUTXyit
Efu5lsSD9tbU7/O67QvPWV1EAqJ50M+NiCjGOV+4HbKeGniTB2leY2U3absG
miHy+cHWPEiF0sma/v4GPAu+WxPFxYP6v/BvP/U7ADjnpo5tY+NB1NvDncc0
b8HlU9YdxUw8SHWgqr3N7xbo7Jaf7FjmRobepM9mzIHQ2v+Nf8coNxLdOSn8
MiYQWHXE7EqruNGscE+Xwqfb4J59l2aCuNG3m5lXuIdvw3eB6Us9H7jRpjGl
ReAKgtQxFMRUxI3aj1SEZ9kGgWbCuZzDT7mRxLFB74D1IDg/X/C7/yY3+nKo
S43d8i402Ynd9LzOjayFdpD9A++C2pe7rKze3Ki1LfHOsZd3gSHdetNOd260
8TVQUYQ9GJKOrGPettyIR1vq/cHPwVCfYxTGocmN/ktYEGsyvgeKDn1bVWe5
0PiqEcvdvDCQUG+oOjPBhUj1/+n6jIcBL1fZ+QQaF3r1YP7tslw4zJbEvlnr
5kKBQ9vdy3LDoZj3oF7tFy6k4uZ5HYoiQKc83+HUMy502F+yLWwgEhQfJjFH
pXKhyID/XBTko0DCLSS7IokLcfd0Onp5RgEDxXFGOpoLNfDwJ28wR0PlRcFb
c/5cKILPY8+DJ9FgIn4jNcSKC+XaR1471xsD2r/P6ZeZcSExkTv/9rHHgsIX
C9rEYS6EXZ/M8FeNBV5vRSUzAy4UOsrpJhAaCy0N/Z/EdnEh6WZPnzbNOLDx
N+x5w8GFTrcWql/PfQjnusibuz5yostOgrk6gwlQ41+d7VDKibYztldNCCWC
tITP7uEiTnSlZEiD1SQRRhx/mUzlcqL7u3aZBhYlwnla0vV/iZyIIhtITQtP
ggtzEr+2e3OiP8whM/vNHkND7LfTOZeJ8T6kBXJFPAYFtcBpBXdO1Byu8cak
9jFM+gywaDhzol+fjc9pwBPwWHumZmTGiabHUpu71FLgMptcrLsiJ+otvRUv
sycNmnM6xOdkOZFxRsjy4I002GUS9sJ7Bydy8165KlWeBnMREyhAjBM97fYu
kdyeDlcFXs1Ec3Ai3mgPyq1X6eAtvvvIWyoHmh+b5s78/hRu7NZl30jhQEN7
hbtELDPhLFx5tS2JA/lNyNl4BmWC6aEsS8OHHCjjPyO5XQWZIO3M8zQ6jAN5
XKkL/sGXBd9je/Zu9+VAZlZbAlpbsmDn/M0LRqYcqOD9A+FTrtlA2Sjgv3iI
A91UKnRQTs0GJk7au5iDHMhezW7v5R/Z0C559L8uHcJTt+7oQg7cNZNIuSjH
gSwOqXwU3fwCut+UN8UycaB/xQ/O3pnIhdqP817v1tlRycpfuXsyeVBYJy3W
vcSOOleR5n9n8iC0P9JFaoYddaAK2Yu9eaBGcmAo7WJHYZ4Junwd+RBx6Z9K
TzE74u7b+lib9gp0lfTiZVzYkfSm5J7SwgJI12rsPX2aHdUvJxkfby+A/wxt
ZVPt2JFSYXCW5kYBNDh4fSBbsqNbxYJR30wKwTYmZ4BxHzviDyypOz5SCD4L
JKVuUXb0oepoD5tSMbx+P1AT3cSGzg+WFxxdKAGBWg9Swxc2JDhsIn50+zvw
+bF6gq2aDR2V2dmUYv4OsEmhqZsf2JDcwUUp5cJ30CBuInghhw1t/SQVKeld
CqOBhQ4HgthQlkxN6m3O9yBpeGdpWZ0N8ftUWw94fYIFiVa5eyrE89bM/NDc
T1CzuOMkWZENreXNWvr3fwL35zWflHawIXuJ9zuMj5RDKQvnHWcBNuQnaS7v
L4+DaVU0T+M0Kxp6b9Dw+jqCwH2p29KzWVHl8vR/3xw+g8WmGQvFZ6xo/frX
1Ju3PoP0HAS/T2VFxg1V9hZpn6EhfWCkNZ4VyS6nHvDq+wwiDFIvOe6yIrvs
bxrhTpXwpjxP09ORFflzf7/JdrEK+rXLDh/cxIqCsmpk+9NrAAt4kOhJZkVz
a5PWXnU18AQ5DafzsSJJcsR5tdkasD7A6b/KQtQTlZGqqVcLTUdP5r2ZZ0FW
Jw4pHxyshY9O6xxiDSyoTswzxF7pCyTc21c7E8CCPigBJkD9Ckd/fNmXNPwf
quuJFs/pbYZHBxtlzlUxo7CTtGW32jb494s03PWCCWV8EJOXCeyGZtPgn/xZ
TGgkqNWyOKEb0r8s1ximMyHhzqf2qq+7Qe/D4IuiR0zolqerFUNvNwSlFl8K
v8OEBpHWcK9WD7CctVnVsmNCmJH6s8C5HuCaTxNIJjGhY8KxU/vN+qDbjfxf
MxcTSg+Uj0g91wf5Q6F/WNiYUMeZ4sPDfn1w+OeV9ivrjKiXy/zz7ud9EFlq
kGo8zojK7G/f61vuA/5bI3LLlYzoso+Qee7RfhDmVt5n48uIYmWv+AuM94OV
qYto/1VGlOUQ//frfD88epj228WDEe2s+vXRb7UfKOKk575nGZF7ESZUzj0A
FKU5zgQLRjS8KzW+UWkAyKZFrT+VGVH+rjxtoSsDQHqoed5ilAH94Nh7XGd6
AEzbL+3rGmJA0bodVe//DED05hxR5z4GtHGyylp5fQD4skQar7YxoK/VdtMr
XIPAW7KsElvFgMr8I4Q3yw0CT/uH1eZ0BuL8N5UW6jQInJv1oo6eYEDx06mC
O74OQmv9apCPJQOyH21y/90yCGnX3/mkHmNAjWqUz+/aB0Htl5L99AEGlBXF
c2sLbRDsY8UVI1UZ0HqBqbg7wxAUsq/WN3IxoBqLP4qMu4fg7fgFnmT/f3iS
c0WZbfQQmBgNLYxd/Ye7vpr174wfgv4s2+69rv9w9fGks6aPh4DTyTiv4/g/
XIs17LvE8yGw/yVtvEn5H/5QKv+w4YchYK0auJs4sIHzNgncah4aAqsU67VH
Bzdwz4+3eMlKw9C9GihP1t3AyVGcwraqw3DaNtcmZvcG7ma+zJioMQwewuvF
4Vs38F4m9vxVbBhCYjIuBq6s41cunIxwPjYM74Knel1frePUMF9b3GMYsGEK
z0jmOq5cSm4JvToMVfp62mcer+MNgTq9Jj7D0PwvNsE+dB13rWYaK705DKPX
95hanF7HgwyilnUjhkHE406FDmUdDztu9PlP9jCkNuTPlHGv4zvYkzuP5A3D
jp1t4prM6/gnwWGttFfDsGtU9obK7Bo+EbG+ofh2GIxPN6lK16/hiiHc1WsV
w3DDalMmX8Aa/nir16vzncPQhb0OGaSu4sof8t0rWamgp+Z4l7lnFZ+RfV6i
wEGFTDn+oB2tq/jT0ivGMVxU8CB73jz3eRUXCdd1PUyiAtO4htd46iruPcfj
Eb6JCvLx5U7z1qu4xXVZy907qRAVdslB8Ngq3hKn891SkQoLt7baqR1cxdsq
jclXlalQ7hZk46O2iocpjzOm76aCmd7BYyskYn6uB6b12lS4NtGow1S/gsc9
0GN3OESFnv4Are0VK3hiTfBOvSNU0G9T3rO/dAX3jZMIFj9GBe6KmN0hz1fw
cr3MxQZzKqQ9Oi7PeWcFn9l3JfrfCSrU7OsRFtBZwb+uxLiXuVBBKHFyXvLV
Ms7567t5fiAVok9nSt3JXMZ7fupL6QVRgVPxlM1w8jLuL/TxcvMdKmxUfP30
/N4y3j7cEUULocLoRG7oTqdl/GHz7XdjEVT4AK4S6uRlnH9fdr1ZIhU0OCXN
HnEu417Ox/zfJFHhTWv7nb8My/hSb4UQ92MiX1ejsbKpJTxtt5Do+xQqRMbJ
FGO1S/iyyPHN8xlUcBqhGhvdWMKd0oMDf+VTobsgxf/F5SWcZbkyk+0VFaz8
j7/mdFnCP3S3C6q/poIJfzW50WIJZ1CpGLtXQAU17cw+M8Ul/BxHHZm3hAps
Uae9T/b/xV0iPA8+LafCS42+dI+Df3FTX+FptiYqsCZKPPPU/YunlPg1dhN2
XLbLuqb2Fw9zOTTw+hsVBD52vwja9hdP3r1ebNpCBZ99nYWPNhZxh9y2qzdb
if45/LOqvGQR//PIzTmkkwpJL8m1lS8XcTiLa+p1UWGe1/JLXeYirjeVf22J
cFbL98bvsYt4pI3vkTM9RN7WzW00j0Ucf+qeItdPhVanr6O8Mov4dbushItU
KihWck4ISizihxyZi/hoVAjZYTIlIrSIbxWrcn9DeO9I3dw25kW8tZCvdmqE
CqnuNSsafX9wz431czbjVHDxreB2SPiDq6naVs5MU2El4t2u12x/cN/9XUf2
/qXC/pmc6wMbC/hNmRjWQsKRZsmfBRcX8ME5xg9yS1TYTrlpeW14AXeNTt5C
WabC4TT9a/sqFnArGReBoRVivoJG/MeNBdya/P3csQ2iPwRxdtarC7iLtNX3
UsKqPm/M9rgu4IH7mk9I/qNCrVbc0BPrBZz/gnzVDOHZShu2c2oLON6kqxXE
SCP6e+jo0tRv/JzBmu6t/2gQsedngjz1N56W9ky/i3Bbck3/qe7fuPi3rFsa
LDS44PDiakX9bzyA3ebFOOGHox6PwrJ/483qLGPGbDSgrSz3bHb6jZ+6fsCP
ykGD+1tIF/e1zuNOo+8sH/PSYNSKfaKofh7/5jtuMkLYKJLBVbpiHjdec3ug
ykcD9vXZM1yv5vHVvI71GsIhnS2nft6bx5VOapeNkGhwNz7usKv2PP7U5NsC
hyANhhvC67tUCLuNXDhEeP9/d42Oys7jTGUVhhGEmT299u8WmsdfnHHezU2m
QZDpcZ316Tn8zzN1RhYhGgRyCSvEZMzh6lUlz7ooNOjX58tlTprDWVhWOMjC
NNC7wSbrEzWHb09QHT9E+N/o3+0n/efw5vXz4u8JB9S0i0lZzeGWM3GXo0Vo
4Hc7mauMYw7vKTnQJCVKA5+/4hP9l2fxp1V7mVc306C4OmXPX5dZfNN+W65t
4jT4HScewuMwizssPvhoRPjyLnFJrSOz+IcVOfF4wm6um63j5GbxLTylE3IS
NPhUoh4SXjWD27yXt9u/hQZaFuqSpYUz+A/nF4fPES6dUfs4nD6DZ9p4zt4j
XCirNq97cwaP3HXHup7w82RV+1n1GdzR9sbbQ1tpEBmgrHE8expXo4Zq75Ok
AZeYcsvt+Gk8tmb2vT3h0HdK7q/uTOOf3DyW/AgHzSpmsDlO41sEZl+/Jexz
WoH3vcg0blyat1V6Gw0cDsrRJMKm8B0PeYNWCe/i3f5o1H0SPyOn1OK3gwbt
lrsex5+YxA1CPv6OIxz4WDdd/+Ak3s73oiuPcLOsTe6TLZP424Km9U7Clw0e
lJt+n8Crl5ySNaRo8ObaX1qp5gRut6zxYoiwDf7f5NkdE7i8Fs1xiTADq8Cc
AP8ErlErT+OWpoFpnMKq+/g4nj9gfVKd8OxLJz7JlHH8pYne+h3Cu4a+at5n
GselmvPuiMgQ9cl16GjMjOEtdTKH5AkHXqbtG+oawx8ZHR7RJty8znBY9+0Y
zluknGZP+LKIhuOcyxiexRstkkH4zZH00BONo/hH1u2hkrLE+KVeHXKJI7jY
5YC+/+Ro8Egh5qZEyAhu3TsrzE94Nf2lpKDXCF7H66MmTrjmPs117dgIvsWu
WFSdsN1Jm5UmthGc+XllhjPhsA1tMS9fGt5kH/LzA+HZqzb4+bM0/OqfkAs1
hK1GvJztLGj49cRDY82EJZtf5h1UpuF1+atPqIRLn27R2TRCxfNIv8Z55GlA
3c9sV25FxeHu4hFbwiZlWxiL9lPxE8wD15wJv1HUycpWpeL5HVWR7oT9Kd5T
0bxUXPq2hn8AYYFR2k3nmmG86ED36aeE9cLrU9k1hvFVpeKQIcLJLTH95kJD
+JXx56a2O2kwaCggkME8hPPfZuNxIixfHmswNzeI66ypvnchXJYb9zyqaRBP
e3VlxItw+51494Z7g3iilnJMJGGKRtLSgZUBvM2rThcnbJ+/ST5+dABv/kem
VBN+vi355HDbAF6qLjtQT1id73F5UNEAfnqviGkbYcvRJ3dx9wH833PDh5OE
Y5PTSXv7+vEcL/smigINOkmS+qGN/Xhgmm2/GOFt9556/vrQj3eH/qJtJVzg
mdHmndiPry6UtcgTbj6c+aTQrB+/dGNAEiO8eeOYmU1oH27Bx1lxmrBgrf1t
zLwH9zsTn5xJeInNr7RnZw++pTzqYw7hXqOEGX+WHjxk0qI1n3BO/Te7D6Xd
OCX1CbWYMNakp7VnSzfuc7Qtpoqw689tv1UmO3FuPhepQcJHKSDfUt2JB8dt
fk0lrGZ90ulyWifud5tn1xjhjfa4b6/MO/FzSYvCs4Qfdv+Xv7OsA49PUQxa
J4wP0c5IhbTjO2MbWiiKNMjcwfykyqEd71yobd9EOOzslh/Oe9vxP1E67ZsJ
W45Y78uY/IUrBneibYTHx+vEt1j8wkN8+rSUCAvN57aJbG3DX1SqDhgQvsBw
yYj7/Q/8ut4fFzfCDU9efNJ69AMvmWq/5k5YYe+wquvVHziijN71IDx95YR4
jfwPvKC5OPIq4ctDBvO3Hn/HL6pouN0g7FMj8uS3fwu+kLNmfJ9w22kL/m0n
WnCHwQiBcMKa/x6EmKq34FUZU20RhJc0ma+8nGrGlQcOWkQT9nsxdcDFvhln
qrYXSyDMuCm47+2tJtwwRHDuGeHPZitfBPY04aHZyzeyCN8Nu1R8abYRj4sH
xmzCrGsn7ss5NeK3/3Ix5xLm7lPanaLfgOOpYd2vCVOy2kPustTji5lM0+/p
61NRULIIr8YpEt7lTYSTBNpRgW41fkXs8uo3+ngLdyxIs1V4kY+Wegvh/pKu
a42WVXjmyqm0H4TjdcIrDSUqcZ3JwqPthDcMx210ChA+80516wA9X7lHE8nO
CL/5vEhxkHA7p37AshDCTx+/sWeI8JnHuw0v/inHsW0LB6iEG5/HdjuFfsQ/
ilnuGyOc+smU7dCrd3jh+ll8lvC1wBwFdsF3eG+naeYcYXMDBvNq3xK8aoEW
Mk+Y7cvrJ7DvLT4nr3Bggf59WnlV1VoLcZbk98//Er7TllSmtZCH8wm/Z9og
/NB5x5dy4RicOqmoz6FE7JdWbBRO9we4r23zEN0/qdVJj3JCcWbFb3c4CbNw
hOg7GATggqrz5VyEReaEAuYdHUDit842XsLvJEdEepjjwY2kly5AmLuT7dej
swlQ3ntDTpCwY6xsvGltEjyJP1pANyezG39VWCqYZjV9JBNWurp49yd7Jjj9
iK6kEL5tcf3mx6iXoLGyEStKOP/1/VNJ6BWspdqwiRFu40rW9pl7DfZSt27Q
LXS6Zy1BrgCu12F2mwm7iW68NwsvAuxSJ1mCsGA4aFYfLYWqB2tHJQnv1hgQ
bhtHMOx8ilGG8MFH539Mq1TArnLOY3TbLs5Esl2vgPWBP4/pDirZYNnL9hn6
8u/vliX8XWPzwuPtlcDj335CjvBVTetmp1PV4BoYdXcn4ZCE3vAbz6qB62t7
Dd3Jf88axo1Xw4vi6+wKhD+/8yqvulYDOQl19+kW2BObLxNfC/d0qu8qEi7c
0xg61fgFhpvu2CkTrkm03M8qVA+2Q8vxdHcudf2TOFUPZe29jXQzlY37mI7X
g2P1ivYuwuZ72c8WsTYAy6M0fhXCc3sN9l2HJsjteP9MlXBiSrd/kE0L/KuM
vaBO+PDyXVbeWy0wZVCYQDfDccXopKwWaPC2qKT7PHfAszfzLTBK2rpJg/Be
vy31vRHfYdaOBae70+a0sHbFDxjiIP3RJBxZzPm0ZuQHRCj1btpDWJ9UJG/O
2wpLsvswunNrmTHXk63gy1QfTLefRtaZhD+tkOfCQtpLeDN5tOC3XBtgFlwC
WoSbL0Vr3zJtA6bVzF103/26p5rTtw10if9kuieD7rdLVrXB9RHLMLo/zcn/
O2b/C3aoS6zTbf/t4uH82HZ4Sib/0KbnvZPSplnWDul17pN014SUO1T2tQPT
y2ssOvR+xPg8OxU64Ln2Sw26N/LfJLHXdsCzy2nxdKeF/aadWe2ETUNmB3UJ
t4fdVHXa0gUeju0n6CaFswXYGXTB5kPSF+kOChcTsgrvAv9nonF0n4swMDAU
6wamYq9uuhUi49LktHug7OuZsxjhs5HiE1IOPbDlTIY33amR2Rrb7vRAdeXr
YLr5oj40in7tAdNq7Sy656OGVrlO9gKFU3qQ7tKY3TbTN/pgve6FBdC/f8yn
Z+OpfWB7QMyJbvlYwxna5z4Y+OjsQffRL4qVl1j6QfagXyjd+Jd9tueP9MOY
TPN7ujPqXUNP9PTDoJ6riB7h8nqlV9Yz/SChc2M73V31v38cZxwAlfPnlegm
f725xVxqABZQjwHdIV9jSkwuDgC3kcZFul0byoa11wcgK2G8jO7MetGbfbyD
EBNR/5nu3jo/oTtbB8FkV+RXus2rdQ/WGwyC58uKbrp1yiuybcIGwe76wDrd
vG++uHkLD4Exp772PsJGr+SZN8kNgcWZAH26g/LDH3/UGoLimgxjuv/mHGlg
th8ChaxMa7r7n7YoxmYOgdXLuKt0F8V1zL5SGQZNVctMuqdjtO6bGwzDwpJi
Lt2y0Y8lFy2HIfH+79d0P4mwM9e9NgxqNP0PdIcEDxR9LR+GqVtLzXTb+I75
jB4izom7p5bojvU24Yuwo4J5xJN1uhs887KVL1FhcVKLSZ/wvssX231iqXAk
+AAX3fKuc3tZOqhQoZawme512+U1yXNEn4KlDt3crw/vPHCdBm+fnNCjezNz
+onzEcQ+Znp0P91aeQdLXhUSOYSxHqb72mrcJe1/xLrm39nSHXpsJMVeYATS
nuva053wTKvhttQI5BoWO9FdcmhAtu7QCMwIep+n+/djpUHLxBEgc5p40800
e5t0LW8E4h1PXaNbYP9P7HH5CARvdvKje9ek3+OB4RGY99W/TbeHzhdLD5VR
6ApzjaB7rNu59l79KPBIe6TTvbTr3Z/cnlH4Pf0+g272YM4dTbOjkFK6lkm3
tGJBIFl4DL7THF7Qfebmxt6nzmMwWp1TQLdXi9n5Kp8xKHj1tIjuO1JZj0bu
j0ERHv2W7ozGQ78V34yB9ohZGd194kn579fGQE/gDKJ7oxo4GLePg4XKu8r/
5+lBO2toPA53347U0G1bvntLa/w4kMeHG+j+ad8UM6U0AV4/3H79P988qzeZ
5hOQUvKk4//vL/U2nfSZgAtTJV10n46Z4ar/NAEFItl9dLP2+srfHpgAnXMB
A3S/kGcw3sMyCallekN0z1aSQp4fnoQahvs0ujXtJCvJDycBTd4doztgUYXh
TtckfD20d5Lu6ih93bltU3DpU+70//tDzuKGg9sUjBb1zNJt8dn5XWPBFDz2
bpunO/mk14L28hTYSSQt0D2wcFclV28aCtPlFumWjYz3EAmdhv6a8L//7wdU
MrpAmQHBsz+W6Tb4/et0S9YMFBwKX6WbIlbu2s0/BwZnP23QHaZD2tZsOg8z
e1f+7/8BU1qqvA==
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small}], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1: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
/N//A966qGs=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-5.945346949926692, -0.7985076962177716}, 
     PlotRange -> {{-5.945346949926692, 
      1.1447298858494002`}, {-0.7985076962177716, 0.7419373447293773}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-5.945346805231246, 1.1447297411539545`}, {
        7.28879556865261*^-7, 0.6931471805599453}}, {{-5.945346805231246, 
        1.1447297411539545`}, {7.28879556865261*^-7, 0.6931471805599453}}}}, 
     DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-5.945346949926692, 
      1.1447298858494002`}, {-0.7985076962177716, 0.7419373447293773}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Allred\"", "\"R B-J\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[
                    NCache[
                    Rational[7, 12], 0.5833333333333334], 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[
                    NCache[
                    Rational[7, 12], 0.5833333333333334], 1, 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[7, 12], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.5833333333333334, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[7/12, 1, 1]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[7, 12], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[7, 12], 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7807918172715893`*^9, 3.780791837285384*^9}, 
   3.780791932214921*^9, 3.780792004928257*^9, {3.78079204305757*^9, 
   3.780792087782094*^9}, {3.78079215642975*^9, 3.780792164835044*^9}, {
   3.780792254109398*^9, 3.780792273872723*^9}, {3.78079236851404*^9, 
   3.780792413867907*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Hue[
         NCache[
          Rational[7, 12], 0.5833333333333334], 1, 1]], 
       LineBox[CompressedData["
1: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
zWJ6DiUbdAdpkSQajOaw+f0r//f/AHAdH3U=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small}], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1: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
l79s0hyqRZJoMJnD5g+u/t//AwcgDhU=
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-5.945346949926692, -0.7985076962177716}, 
     PlotRange -> {{-5.945346949926692, 
      1.1447298858494002`}, {-0.7985076962177716, 0.7419373447293773}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-5.945346805231246, 
        1.1447297411539545`}, {-0.6931471805599457, -7.288795564448626*^-7}}, \
{{-5.945346805231246, 
        1.1447297411539545`}, {-0.6931471805599457, \
-7.288795564448626*^-7}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-5.945346949926692, 
      1.1447298858494002`}, {-0.7985076962177716, 0.7419373447293773}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Allred\"", "\"R B-J\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[
                    NCache[
                    Rational[7, 12], 0.5833333333333334], 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[
                    NCache[
                    Rational[7, 12], 0.5833333333333334], 1, 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[7, 12], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.5833333333333334, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[7/12, 1, 1]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[7, 12], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[7, 12], 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7807918172715893`*^9, 3.780791837285384*^9}, 
   3.780791932214921*^9, 3.780792004928257*^9, {3.78079204305757*^9, 
   3.780792087782094*^9}, {3.78079215642975*^9, 3.780792164835044*^9}, {
   3.780792254109398*^9, 3.780792273872723*^9}, {3.78079236851404*^9, 
   3.780792414595447*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Equivalence of RBJ and Allred First order shelf filters", "Section",
 CellChangeTimes->{{3.780791532205015*^9, 3.780791550439406*^9}, {
  3.780791626606907*^9, 3.780791634869154*^9}, {3.78079261531721*^9, 
  3.780792615938377*^9}}],

Cell["\<\
When we set the slope of the RBJ filter to one, it is equivalent to the Rusty \
Allred second order shelf\
\>", "Text",
 CellChangeTimes->{{3.780791636145278*^9, 3.7807916600685*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"firstOrderHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"2000", "/", "24000"}], ",", "2"}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"variableSlopeHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "/", "2"}], "]"}], 
           RowBox[{"2000", "/", "24000"}]}], ",", "2", ",", "0.5"}], "]"}], 
        "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Allred\>\"", ",", "\"\<R B-J\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hue", "[", 
         RowBox[{"7", "/", "12"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"{", 
          RowBox[{"Dotted", ",", "Black"}], "}"}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Pi]", " ", 
           RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.45", ",", "2.1"}], "}"}]}], "}"}]}]}], "]"}], 
   "\[IndentingNewLine]", 
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"firstOrderHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"2000", "/", "24000"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"variableSlopeHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "/", "2"}], "]"}], 
           RowBox[{"2000", "/", "24000"}]}], ",", 
          RowBox[{"1", "/", "2"}], ",", "0.5"}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Allred\>\"", ",", "\"\<R B-J\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hue", "[", 
         RowBox[{"7", "/", "12"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"{", 
          RowBox[{"Dotted", ",", "Black"}], "}"}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Pi]", " ", 
           RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.45", ",", "2.1"}], "}"}]}], "}"}]}]}], "]"}]}]}]], "Input",\

 CellChangeTimes->{{3.780791571393579*^9, 3.7807916045263243`*^9}, {
  3.780791665727162*^9, 3.780791709803494*^9}, {3.7807917495865717`*^9, 
  3.780791835859074*^9}, {3.780791884786034*^9, 3.780792086436514*^9}, {
  3.780792118195956*^9, 3.780792163564447*^9}, {3.780792251919773*^9, 
  3.780792411552292*^9}, {3.7807926221633863`*^9, 3.780792659202023*^9}, {
  3.780792779765539*^9, 3.7807928277879877`*^9}, {3.78079303090908*^9, 
  3.780793047775124*^9}}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Hue[
         NCache[
          Rational[7, 12], 0.5833333333333334], 1, 1]], 
       LineBox[CompressedData["
1:eJwV1nk0VV0UAHA0KFOPN1ChzIUoSkS2ISqpVBKFUH2IIslQSDJkJplDRZSK
Mks5R6IoypjM8d4zDw8Roe/6667fuuvuu4ezztpiNk4nL3GwsbENs7OxrTwT
bBSX130WxBv1la/9kzUFxxvmv+urBLFZpW4+Q88U4F7w6INKQfznYEfjkJUp
MF/1t29Fgth/7q2CYbwp7JmPL1YtEsTzn1hLXmvMoDGS7ZpdhiDOfWua8HLA
DLjfN/R/8hXEC7mH7VQ/noPub8vt4T6CWFNhj5BI/znI65NrPOUliHloxnyS
HOZwdl0g7nEXxMfVIy4mapnDs1P7UuauCuKZ228ZUsgcDgw/MZGxEMQcUUWy
gx8swEfQtSZQTRDnVDeTZJnnIb6nr054ryBOuBnYbrTWCl5nnWjM2y2IJSVb
a9M3WkHfXsWObkVBrGGb6BqpZQX6psOjKtKCeCgped430gr4Eq1IAwKCePBa
UgpjlzWkbDp65uAoDaePyw/7BdtAUV/Zua4hGs6UfHmvPc0G6rNlra4P0LAM
JXrBsMgG2NTX2af10TDDPKTNr98GLp6rvDnXRsMZD/9bowIXQP6hWmpWFQ0f
LLr+q/XvBXgnIs3gTKPh7zdGMiZDLkH4F7eu6oc0XN+oZimbfgksPT+1BCTR
sHzIS5XbZZfgX7Nd9ao4GjZq9nl/c/QS6IS9yPoXRsMeGgE33h3/Dz4t7Lw8
d5OGXd7PRgdstoXGH+oTTBMazpccj+OtsYMnAWEDT41p2L6NQRqk28F15a6e
iydp+OdtidxfbPZAifT53neUhteud+xTUrOHM/oVb7oP0PA6fr0poxf20Fmg
79qqRMOFL7UykmIvw0D0ifkqPhrmdNhWdOGuI8ygY7pRPDTM9nrngU9PHIFt
/Ej4WS4aThs7In/0gyNsMtAXm1hDw0IiN9Mw+xU4xqF+WGiJiskiQXIGfleg
yEUy8fIIFRdxZMmtD7kKAafmVDd8puLmNtP2jLPOcP/OjN/PKireKNNc9djR
GVJzWV/TK6k4PkTJNM/HGUq4R61UERVHvbtQzZfuDKOVvfesi6j47YNVW4pH
ncF4d21bfgYV68sHl7fdvQYS1BQP0ztUnO9fYr5Y4QJufzq+TflQsejuKRmz
Nhf43LFJJtyLil1VzGy/j7uA45OElgp3Kh5cWlvOJ3wdihQfKMldpeJppaFd
9e7X4ZBB6OjSWSr29vrac323Kzje9rRK303FO3Lct0LlDSi3KSner0TF89sy
m7Z13QCS/hxfmyIVc3sWbNo1dwMKeW6855Gj4s/sh6dS5NxgOdF5k5sYFbdX
Ml6PxrpBdIFt8yE+Il6npoaPszsUDZ0+ND5AwXw79np7aHoCznOLecOgYPGd
DT43z3pC7a34btd+Cj44nqCV7OYJ3bw/Xf92U7BROluwWq4nrFUyf7yulYJf
fv/eOCp2E0xu2iyIf6Tg6jL7wSO8t2CWy+nlmUcUnH0rW7d30QvYmiPnNqVS
8O7F7OlFYW/gSnmt051MwcOutjUa+71BVHGq7WI8BatVm3hJ+3iD/qkba1wi
KHgiR0kyk90H4pJvWYZ5UTCT32uzx4bboCJ/j1RhSsGulpqd79N9ITB72M7Y
hIKVtom8yi32hZZtRysGTlHwRaVi/tIvvuAqJeDCd5yCwzsjOcgzvvBG9GHT
OT0K9mG39mXq3QF5/tdxs7somJxzZJ/k+B0Qn/0hLM9NwbEBB45VnrgLLq77
bqB1FJyprHq62+4uVEw9rDu5loKfhumHU3zvgtWEtY8nOwXfpTzkacq5CymD
Iz3Vc2RceaAgL5nXH4Q6/j2xppPx3jRs4f7dH/iwzPb492RsbxMlu98xEJLK
VZr2lJFx1Se357cDA0HqvZ53cwkZd+v1m/Q+CgSNtxca+AvI+Exc+4fFlkBw
KEjzDMsm4887b4c/1Q6Cz88Ea+/Ek/Fr9dxvzaL3wC+a08HxGhlLsvPuf8QK
Br4oGpXbiYyHjGo+j2wIgcQIKfTckYyzGj+zzBRC4HWoLnnAlownS7/npTqE
QE/A7TJrSzJmD/i1uX4gBDRuznGfOULGfRZS5kxmKMzZDLzUliJjs8aZBQH2
CNh3sM1gvQQZq95mKWeIRYCPXM3g961k/KGsiH5GJwJWz2RLWgmT8e+y1aoy
/hEgEHD1oQ+ZjBskDt2wXx8J8lm/Q8vYifo2asYd5Y0Cm5FVDnu6BbDIUXd/
U/loyPw2s26pQwCvja48NKIZDUP5jMyPPwXwwMHLUdEnosHZ61PfqRYBnBzD
mBVyjwZv3tCzLl8FsGr6P6BWRkOCooBB7lsB/PSS9kyz5X2ou751+/Z4AZy/
3Nm59DQGTHhPNeMHArjwPekl610MdGcG3Da9L4DN1w7Y/2uKgcmfwy1B4QKY
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
aWk=
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small}], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1: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
FDtqbg==
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-5.945346949926692, -0.7985076962177716}, 
     PlotRange -> {{-5.945346949926692, 
      1.1447298858494002`}, {-0.7985076962177716, 0.7419373447293773}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-5.945346805231246, 1.1447297411539545`}, {
        0.0014750952293990426`, 0.6931471805599453}}, {{-5.945346805231246, 
        1.1447297411539545`}, {0.0014750952293990426`, 0.6931471805599453}}}},
      DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-5.945346949926692, 
      1.1447298858494002`}, {-0.7985076962177716, 0.7419373447293773}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Allred\"", "\"R B-J\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[
                    NCache[
                    Rational[7, 12], 0.5833333333333334], 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[
                    NCache[
                    Rational[7, 12], 0.5833333333333334], 1, 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[7, 12], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.5833333333333334, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[7/12, 1, 1]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[7, 12], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[7, 12], 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7807918172715893`*^9, 3.780791837285384*^9}, 
   3.780791932214921*^9, 3.780792004928257*^9, {3.78079204305757*^9, 
   3.780792087782094*^9}, {3.78079215642975*^9, 3.780792164835044*^9}, {
   3.780792254109398*^9, 3.780792273872723*^9}, {3.78079236851404*^9, 
   3.780792413867907*^9}, 3.78079262897895*^9, 3.780792660054636*^9, {
   3.78079278234778*^9, 3.780792829010223*^9}, 3.780793048868662*^9}],

Cell[BoxData[
 TemplateBox[{GraphicsBox[{{{}, {}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Hue[
         NCache[
          Rational[7, 12], 0.5833333333333334], 1, 1]], 
       LineBox[CompressedData["
1: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
        "]]}, {
       Directive[
        Opacity[1.], 
        AbsoluteThickness[1.6], 
        Dashing[{0, Small}], 
        GrayLevel[0]], 
       LineBox[CompressedData["
1:eJwV1nc8lV8YAHBSiIjLvUpGKEVSocx6jZK2EDIK1c9IEbKyygxlz4wy2zIy
4znIjCQ7m3uvPa49ot/rr/fz/bznfZ7nnPOc83mFzGy07m2jo6Mbp6ej23rG
mh3bZK7lQfQx/PHhkvpg/dho8WcVDzp8Qb7V7YI+YAHPJyMreRA1++Ksz119
oH4a/rMfeBDN95LWTLw+nFyNKZDL50GBCdid4ztvwu8QukcWaTzo94mThk8n
bgJrafNwjRcPaq8k2mnXGkJf0+afFx48SNRq7xelEUPIGTryW9uNB1UnXZXX
YDQCA2Y/1O/EgxLd+r9XnzWCt9oKicsPeZBJG+P0vUojODueonvIGK835bvb
1Rpj8OBxqPOT50EMIYGMg+O3IaZ/qJFPlgflVIF4FrMJfMm8/jtHhgdFazXO
b+czgSHZY919x3hQxTbVm0uqJqCuPz55SpQH+VDXPebDTIA9zoRjhMCDFG32
sNnKmEIi7xW985Mk5JbrM40Fm0H+UIlh7xgJedOXtMenmMHP9+Im9iMkxGR9
JpqjyAzoFJktk4dI6JyU2r4rVDO4a1jputxJQlf4iNVsqndAIkE+KbOKhDAL
Q9P6zTvwjV+UwpRMQrOmdb8FXt6DFz8ce6sTSOhmXuo+o4x7cMulps03noTO
tEX455Xdg3+tFtUM0STUcE9VpWDmHqgGf8j8F4znfyUTwqT9H9SsHbdadiUh
udHxV9MC5vC7Q3GGqktC96qlcr82WECKb/BIug4JHSY2qUWOWoC9dG//XS0S
2s59ciNsuyVwh3j8GrpCQq/m3R0mlCxBT708u+8sCYXq2KjxZllCT566Q7sU
CWm0v9Txi7OCkbDrq1XsJOROKWqI8beGBbiqFroL//7o44V/GdZAN33phQEL
CZH2yj0JrLYG3ovqQjM7tvKXKDAxPoCr2xQv7NkgImsProRUvweQb3cgzmqC
iBore08/f/kQfLWX5XbXElGdbbkfm7EthD9deNZVRUTnm1e52GxsISmL1pBa
SURvDoxe3P/UFgpZJ03kgIgIOT9YnqXbwmTlQIBpPhGFpuiLnZyxBR2Z+s7c
NCLa/iR80NrvEYgQE531nxKRpMmjtbLvduC40t0050FEVpcidwp220FtN++h
F25EdK4uLzSOZgfWKbFt5U5ENLJ28VmfgD3kH4uUOvKQiHbvNDX44GoPGheD
JjcMiIjZ4u8La1kHsPZ0MUmVwevJ3px+VP0YyswKC05LEVHHqrnF7YHHwKG+
zN55jIg8pblc7689hq+7HpfuOkJEAgO7F/olHWEzzpbXUYiI9Ix/SZyJc4Sw
PPNWDXYiglGC34y9E+SP3dCYHuFGXdv0piRUXQDlOEZkU7iRyMxlOulbLlD/
JKbPYZgbrf/3q0PP1QX62Loc1vu4Ed2Xbv3NHBdglDJ6w9zOjXxB8kLFQVfQ
dTVbE/7OjQx0yn3UOJ/AEovNR73X3IjXqeSLIL070LWGLPMmcaOmvg1GFSF3
YEn8otr3ihs1xi34+6q4g8Cxuc67MdyoL/zaa+dn7qCu/XiH3UtuVHvA8Ror
owdEv3pyK9iNG/34HXtpO7cnnJII4CjX50YsY/wrEhle4Pd+3EJHF7dj0juh
Yi9oO3ylfESbGy0yHJ47+tMLHA4S7NivcSMO+z95L5a8IFsgocXwHDeaPJa5
aa3xFCQ4v0QvneBGVkl9CxWzT0F4qYNPgpUbuR5dl4jS8QY7B4XHwMyNZCV9
fXPve0P5XEKjFiM3oi5NE6aeeYPJjKmHCz03ImaaaeRke0Pi6ER/9TIX8p8q
DAjg8IE93f9STMlcqDSSLOLV4gPs6JBYTCkXUvhe1ONl4wfxZadaTpZwIekb
0nw1z/3gYOk599ZCLiQcqv/ySJofKBXfaebM40J7QTX0Wpcf3M9Ldgl+z4Va
jl8sYjrnD7VveeqfxnAhvwdLvrrCAfAsjOm+9SMuJDtVbHx38Tmwh5KIrDZc
6KC0kGweVyDEvTwI76y5UL6mR46oVCB8CVLjGjHnQtWv7os62ARCv69niekt
LuSiZiv5dSIQlFyXWfUucSEP31tRtPEgWDYb+ahykAtZlXKqW+14CQrnOy/u
FOFCZ0yu8NCJvgSPI3Wjv/ZzoZ3lk3cL1V/C9oX3B0z4uNDDtZZ/oQEvgeD7
MMGDiwtFf7q6ncoWAhKZi0El9FyojL2ZlLw7FMwmGO6f7COgimXsym/JMMho
WmDe6CYgtb2OH8xVwmAsl5LxvYuACFWxIRw6YWDrVjOk3UZA5LXaU4kuYeDO
FmRg10BAdAae+9OqwiD2GOFiVjEBrdbkRrqYhkOj/X4xsRgCkn9UzfTrbQTo
smm3okgCulm7yVgDEdCX4eupH05AdawyKx3tETDbNd7m/4KAfrmW8GvsiASC
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
        "]]}}}, {Ticks -> {
       Charting`ScaledTicks[{Log, Exp}], 
       Charting`ScaledTicks[{Log, Exp}]}, GridLines -> {None, None}, 
     FrameTicks -> {{
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}, {
        Charting`ScaledTicks[{Log, Exp}], 
        Charting`ScaledFrameTicks[{Log, Exp}]}}, 
     AxesOrigin -> {-5.945346949926692, -0.7985076962177716}, 
     PlotRange -> {{-5.945346949926692, 
      1.1447298858494002`}, {-0.7985076962177716, 0.7419373447293773}}, 
     DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, DisplayFunction -> 
     Identity, DisplayFunction -> Identity, 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None, 
       "ClippingRange" -> {{{-5.945346805231246, 
        1.1447297411539545`}, {-0.6931471805599455, \
-0.0014750952294007161`}}, {{-5.945346805231246, 
        1.1447297411539545`}, {-0.6931471805599455, \
-0.0014750952294007161`}}}}, DisplayFunction -> Identity, AspectRatio -> 
     NCache[GoldenRatio^(-1), 0.6180339887498948], Axes -> {True, True}, 
     AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
     CoordinatesToolOptions -> {"DisplayFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& ), "CopiedValueFunction" -> ({
         Exp[
          Part[#, 1]], 
         Exp[
          Part[#, 2]]}& )}, DisplayFunction :> Identity, 
     Frame -> {{False, False}, {False, False}}, 
     FrameLabel -> {{None, None}, {None, None}}, 
     FrameTicks -> {{Automatic, Automatic}, {Automatic, Automatic}}, 
     GridLines -> {None, None}, GridLinesStyle -> Directive[
       GrayLevel[0.5, 0.4]], 
     Method -> {
      "DefaultBoundaryStyle" -> Automatic, "DefaultMeshStyle" -> 
       AbsolutePointSize[6], "ScalingFunctions" -> None}, 
     PlotRange -> {{-5.945346949926692, 
      1.1447298858494002`}, {-0.7985076962177716, 0.7419373447293773}}, 
     PlotRangeClipping -> True, PlotRangePadding -> {{0, 0}, {0, 0}}, 
     Ticks -> {Automatic, Automatic}}],FormBox[
    FormBox[
     TemplateBox[{"\"Allred\"", "\"R B-J\""}, "LineLegend", 
      DisplayFunction -> (FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[
                    NCache[
                    Rational[7, 12], 0.5833333333333334], 1, 1]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Hue[
                    NCache[
                    Rational[7, 12], 0.5833333333333334], 1, 1]], {}}}, 
                    AspectRatio -> Full, ImageSize -> {40, 10}, 
                    PlotRangePadding -> None, ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #, 
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    GrayLevel[0]], {
                    LineBox[{{0, 10}, {40, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    AbsoluteThickness[1.6], 
                    Dashing[{0, Small}], 
                    GrayLevel[0]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {40, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {"Columns" -> {{0.8, 0.5}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxDividers -> {"Columns" -> {{None}}, "Rows" -> {{None}}}, 
             GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}}, 
             GridBoxSpacings -> {"Columns" -> {{0}}, "Rows" -> {{1}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ), 
      InterpretationFunction :> (RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    Hue[
                    Rational[7, 12], 1, 1], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    Hue[0.5833333333333334, 1., 0.6666666666666667], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "Hue[7/12, 1, 1]"], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = Hue[
                    Rational[7, 12], 1, 1]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["HueColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    Hue[
                    Rational[7, 12], 1, 1], Editable -> False, Selectable -> 
                    False]}], "]"}], ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                   RowBox[{"Dashing", "[", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", "Small"}], "}"}], "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0]"], 
                    Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0], Editable -> False, Selectable -> False]}], 
                 "]"}]}], "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2}], "}"}], ",", 
           RowBox[{"LegendMarkers", "\[Rule]", "None"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Row\""}]}], "]"}]& ), 
      Editable -> True], TraditionalForm], TraditionalForm]},
  "Legended",
  DisplayFunction->(GridBox[{{
      ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}, {
      TagBox[
       ItemBox[
        PaneBox[
         TagBox[#, "SkipImageSizeLevel"], Alignment -> {Center, Baseline}, 
         BaselinePosition -> Baseline], DefaultBaseStyle -> "Labeled"], 
       "SkipImageSizeLevel"]}}, 
    GridBoxAlignment -> {"Columns" -> {{Center}}, "Rows" -> {{Center}}}, 
    AutoDelete -> False, GridBoxItemSize -> Automatic, 
    BaselinePosition -> {2, 1}]& ),
  Editable->True,
  InterpretationFunction->(RowBox[{"Legended", "[", 
     RowBox[{#, ",", 
       RowBox[{"Placed", "[", 
         RowBox[{#2, ",", "Above"}], "]"}]}], "]"}]& )]], "Output",
 CellChangeTimes->{{3.7807918172715893`*^9, 3.780791837285384*^9}, 
   3.780791932214921*^9, 3.780792004928257*^9, {3.78079204305757*^9, 
   3.780792087782094*^9}, {3.78079215642975*^9, 3.780792164835044*^9}, {
   3.780792254109398*^9, 3.780792273872723*^9}, {3.78079236851404*^9, 
   3.780792413867907*^9}, 3.78079262897895*^9, 3.780792660054636*^9, {
   3.78079278234778*^9, 3.780792829010223*^9}, 3.7807930494616957`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"LogLogPlot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Abs", "[", 
        RowBox[{"firstOrderHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", "\[Omega]c", ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], "]"}], ",", 
       RowBox[{"Abs", "[", 
        RowBox[{"variableSlopeHighShelf", "[", 
         RowBox[{
          RowBox[{"zz", "[", "\[Omega]", "]"}], ",", 
          RowBox[{"\[Omega]c", " ", 
           RowBox[{"Sqrt", "[", 
            RowBox[{"1", "/", "2"}], "]"}]}], ",", 
          RowBox[{"1", "/", "2"}], ",", 
          RowBox[{"1", "/", "2"}]}], "]"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Omega]", ",", 
       RowBox[{"\[Pi]", " ", 
        RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
     RowBox[{"PlotLegends", "\[Rule]", 
      RowBox[{"Placed", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Allred\>\"", ",", "\"\<R B-J\>\""}], "}"}], ",", 
        "Above"}], "]"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Hue", "[", 
         RowBox[{"7", "/", "12"}], "]"}], ",", 
        RowBox[{"Directive", "[", 
         RowBox[{"{", 
          RowBox[{"Dotted", ",", "Black"}], "}"}], "]"}]}], "}"}]}], ",", " ", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\[Pi]", " ", 
           RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0.45", ",", "2.1"}], "}"}]}], "}"}]}]}], "]"}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{"{", 
    RowBox[{"\[Omega]c", ",", 
     RowBox[{"\[Pi]", " ", 
      RowBox[{"20", "/", "24000"}]}], ",", "\[Pi]"}], "}"}]}], "]"}]], "Input",\

 CellChangeTimes->{{3.780792867466395*^9, 3.7807929219460907`*^9}, {
  3.7807930107298717`*^9, 3.780793013183947*^9}, {3.7807936795871696`*^9, 
  3.780793692240835*^9}, {3.7807937675593567`*^9, 3.780793769324367*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`\[Omega]c$$ = 2.3442930900229952`, 
    Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Omega]c$$], Rational[1, 1200] Pi, Pi}}, 
    Typeset`size$$ = {360., {112., 148.}}, Typeset`update$$ = 0, 
    Typeset`initDone$$, Typeset`skipInitDone$$ = 
    True, $CellContext`\[Omega]c$798720$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`\[Omega]c$$ = Rational[1, 1200] Pi}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Omega]c$$, $CellContext`\[Omega]c$798720$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> LogLogPlot[{
         Abs[
          $CellContext`firstOrderHighShelf[
           $CellContext`zz[$CellContext`\[Omega]], $CellContext`\[Omega]c$$, 
           1/2]], 
         Abs[
          $CellContext`variableSlopeHighShelf[
           $CellContext`zz[$CellContext`\[Omega]], $CellContext`\[Omega]c$$ 
           Sqrt[1/2], 1/2, 1/2]]}, {$CellContext`\[Omega], Pi (20/24000), Pi},
         PlotLegends -> Placed[{"Allred", "R B-J"}, Above], PlotStyle -> {
          Hue[7/12], 
          Directive[{Dotted, Black}]}, 
        PlotRange -> {{Pi (20/24000), Pi}, {0.45, 2.1}}], 
      "Specifications" :> {{$CellContext`\[Omega]c$$, Rational[1, 1200] Pi, 
         Pi}}, "Options" :> {}, "DefaultOptions" :> {}],
     ImageSizeCache->{405., {172., 177.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{
  3.7807929237037086`*^9, 3.780793015990198*^9, {3.780793680294161*^9, 
   3.780793692630733*^9}, 3.7807937698839493`*^9}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{808, 755},
WindowMargins->{{57, Automatic}, {Automatic, 23}},
PrintingCopies->1,
PrintingPageRange->{1, Automatic},
FrontEndVersion->"10.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (October 9, \
2015)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 118, 1, 64, "Section"],
Cell[701, 25, 221, 4, 49, "Text"],
Cell[925, 31, 29471, 643, 2192, "Code"],
Cell[30399, 676, 216, 6, 30, "Text"],
Cell[CellGroupData[{
Cell[30640, 686, 6708, 163, 488, "Input"],
Cell[37351, 851, 13016, 224, 247, "Output"]
}, Open  ]],
Cell[50382, 1078, 309, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[50716, 1086, 5603, 145, 420, "Input"],
Cell[56322, 1233, 12703, 220, 247, "Output"]
}, Open  ]],
Cell[69040, 1456, 160, 2, 30, "Text"],
Cell[CellGroupData[{
Cell[69225, 1462, 3465, 88, 267, "Input"],
Cell[72693, 1552, 5946, 109, 247, "Output"]
}, Open  ]],
Cell[78654, 1664, 533, 9, 68, "Text"],
Cell[CellGroupData[{
Cell[79212, 1677, 2527, 59, 199, "Input"],
Cell[81742, 1738, 3122, 62, 356, "Output"]
}, Open  ]],
Cell[84879, 1803, 122, 1, 30, "Text"],
Cell[CellGroupData[{
Cell[85026, 1808, 6511, 163, 454, "Input"],
Cell[91540, 1973, 12846, 223, 247, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[104435, 2202, 190, 2, 64, "Section"],
Cell[104628, 2206, 193, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[104846, 2214, 3482, 94, 199, "Input"],
Cell[108331, 2310, 41928, 749, 277, "Output"],
Cell[150262, 3061, 41850, 748, 277, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[192161, 3815, 237, 3, 64, "Section"],
Cell[192401, 3820, 193, 4, 30, "Text"],
Cell[CellGroupData[{
Cell[192619, 3828, 3831, 102, 199, "Input"],
Cell[196453, 3932, 32270, 590, 277, "Output"],
Cell[228726, 4524, 32244, 589, 277, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261007, 5118, 2120, 56, 131, "Input"],
Cell[263130, 5176, 2356, 48, 366, "Output"]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
